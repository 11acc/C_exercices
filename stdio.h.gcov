        -:    0:Source:C:/msys64/mingw64/include/stdio.h
        -:    0:Graph:ttt_test-ttt_without_main.gcno
        -:    0:Data:ttt_test-ttt_without_main.gcda
        -:    0:Runs:1
        -:    1:/**
        -:    2: * This file has no copyright assigned and is placed in the Public Domain.
        -:    3: * This file is part of the mingw-w64 runtime package.
        -:    4: * No warranty is given; refer to the file DISCLAIMER.PD within this package.
        -:    5: */
        -:    6:#ifndef _INC_STDIO
        -:    7:#define _INC_STDIO
        -:    8:
        -:    9:#include <corecrt_stdio_config.h>
        -:   10:
        -:   11:#pragma pack(push,_CRT_PACKING)
        -:   12:
        -:   13:#pragma push_macro("snprintf")
        -:   14:#undef snprintf
        -:   15:#pragma push_macro("vsnprintf")
        -:   16:#undef vsnprintf
        -:   17:#pragma push_macro("snwprintf")
        -:   18:#undef snwprintf
        -:   19:#pragma push_macro("vsnwprintf")
        -:   20:#undef vsnwprintf
        -:   21:
        -:   22:#ifdef __cplusplus
        -:   23:extern "C" {
        -:   24:#endif
        -:   25:
        -:   26:#define BUFSIZ 512
        -:   27:#define _NFILE _NSTREAM_
        -:   28:#define _NSTREAM_ 512
        -:   29:#define _IOB_ENTRIES 20
        -:   30:#define EOF (-1)
        -:   31:
        -:   32:#ifndef _FILE_DEFINED
        -:   33:  struct _iobuf {
        -:   34:#ifdef _UCRT
        -:   35:    void *_Placeholder;
        -:   36:#else
        -:   37:    char *_ptr;
        -:   38:    int _cnt;
        -:   39:    char *_base;
        -:   40:    int _flag;
        -:   41:    int _file;
        -:   42:    int _charbuf;
        -:   43:    int _bufsiz;
        -:   44:    char *_tmpfname;
        -:   45:#endif
        -:   46:  };
        -:   47:  typedef struct _iobuf FILE;
        -:   48:#define _FILE_DEFINED
        -:   49:#endif
        -:   50:
        -:   51:#ifdef _POSIX_
        -:   52:#define _P_tmpdir "/"
        -:   53:#define _wP_tmpdir L"/"
        -:   54:#else
        -:   55:#define _P_tmpdir "\\"
        -:   56:#define _wP_tmpdir L"\\"
        -:   57:#endif
        -:   58:
        -:   59:#ifdef _UCRT
        -:   60:#define L_tmpnam 260
        -:   61:#else
        -:   62:#define L_tmpnam (sizeof(_P_tmpdir) + 12)
        -:   63:#endif
        -:   64:
        -:   65:#ifdef _POSIX_
        -:   66:#define L_ctermid 9
        -:   67:#define L_cuserid 32
        -:   68:#endif
        -:   69:
        -:   70:#define SEEK_CUR 1
        -:   71:#define SEEK_END 2
        -:   72:#define SEEK_SET 0
        -:   73:
        -:   74:#define	STDIN_FILENO	0
        -:   75:#define	STDOUT_FILENO	1
        -:   76:#define	STDERR_FILENO	2
        -:   77:
        -:   78:#define FILENAME_MAX 260
        -:   79:#define FOPEN_MAX 20
        -:   80:#define _SYS_OPEN 20
        -:   81:#ifdef _UCRT
        -:   82:#define TMP_MAX 2147483647
        -:   83:#else
        -:   84:#define TMP_MAX 32767
        -:   85:#endif
        -:   86:
        -:   87:#ifndef NULL
        -:   88:#ifdef __cplusplus
        -:   89:#ifndef _WIN64
        -:   90:#define NULL 0
        -:   91:#else
        -:   92:#define NULL 0LL
        -:   93:#endif  /* W64 */
        -:   94:#else
        -:   95:#define NULL ((void *)0)
        -:   96:#endif
        -:   97:#endif
        -:   98:
        -:   99:#include <_mingw_off_t.h>
        -:  100:
        -:  101:_CRTIMP FILE *__cdecl __acrt_iob_func(unsigned index);
        -:  102:#ifndef _STDIO_DEFINED
        -:  103:#ifdef _WIN64
        -:  104:  _CRTIMP FILE *__cdecl __iob_func(void);
        -:  105:#define _iob  __iob_func()
        -:  106:#else
        -:  107:#ifdef _MSVCRT_
        -:  108:extern FILE _iob[];	/* A pointer to an array of FILE */
        -:  109:#define __iob_func()	(_iob)
        -:  110:#else
        -:  111:extern FILE (* __MINGW_IMP_SYMBOL(_iob))[];	/* A pointer to an array of FILE */
        -:  112:#define __iob_func()	(* __MINGW_IMP_SYMBOL(_iob))
        -:  113:#define _iob __iob_func()
        -:  114:#endif
        -:  115:#endif
        -:  116:#endif
        -:  117:
        -:  118:#ifndef _FPOS_T_DEFINED
        -:  119:#define _FPOS_T_DEFINED
        -:  120:#undef _FPOSOFF
        -:  121:
        -:  122:#if (!defined(NO_OLDNAMES) || defined(__GNUC__))
        -:  123:  __MINGW_EXTENSION typedef __int64 fpos_t;
        -:  124:#define _FPOSOFF(fp) ((long)(fp))
        -:  125:#else
        -:  126:  __MINGW_EXTENSION typedef long long fpos_t;
        -:  127:#define _FPOSOFF(fp) ((long)(fp))
        -:  128:#endif
        -:  129:
        -:  130:#endif
        -:  131:
        -:  132:#ifndef _STDSTREAM_DEFINED
        -:  133:#define _STDSTREAM_DEFINED
        -:  134:
        -:  135:#define stdin (__acrt_iob_func(0))
        -:  136:#define stdout (__acrt_iob_func(1))
        -:  137:#define stderr (__acrt_iob_func(2))
        -:  138:#endif
        -:  139:
        -:  140:#define _IOFBF 0x0000
        -:  141:#define _IOLBF 0x0040
        -:  142:#define _IONBF 0x0004
        -:  143:
        -:  144:#ifndef _UCRT
        -:  145:#define _IOREAD 0x0001
        -:  146:#define _IOWRT 0x0002
        -:  147:#define _IOMYBUF 0x0008
        -:  148:#define _IOEOF 0x0010
        -:  149:#define _IOERR 0x0020
        -:  150:#define _IOSTRG 0x0040
        -:  151:#define _IORW 0x0080
        -:  152:#ifdef _POSIX_
        -:  153:#define _IOAPPEND 0x0200
        -:  154:#endif
        -:  155:#endif
        -:  156:
        -:  157:/* used with _set_output_format which is not present in ucrt */
        -:  158:#ifndef _UCRT
        -:  159:#define _TWO_DIGIT_EXPONENT 0x1
        -:  160:#endif
        -:  161:
        -:  162:#if __MINGW_FORTIFY_LEVEL > 0
        -:  163:__mingw_bos_declare;
        -:  164:#endif
        -:  165:
        -:  166:#ifndef _STDIO_DEFINED
        -:  167:extern
        -:  168:  __attribute__((__format__ (gnu_scanf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  169:  int __cdecl __mingw_sscanf(const char * __restrict__ _Src,const char * __restrict__ _Format,...);
        -:  170:extern
        -:  171:  __attribute__((__format__ (gnu_scanf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  172:  int __cdecl __mingw_vsscanf (const char * __restrict__ _Str,const char * __restrict__ Format,va_list argp);
        -:  173:extern
        -:  174:  __attribute__((__format__ (gnu_scanf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
        -:  175:  int __cdecl __mingw_scanf(const char * __restrict__ _Format,...);
        -:  176:extern
        -:  177:  __attribute__((__format__ (gnu_scanf, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
        -:  178:  int __cdecl __mingw_vscanf(const char * __restrict__ Format, va_list argp);
        -:  179:extern
        -:  180:  __attribute__((__format__ (gnu_scanf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  181:  int __cdecl __mingw_fscanf(FILE * __restrict__ _File,const char * __restrict__ _Format,...);
        -:  182:extern
        -:  183:  __attribute__((__format__ (gnu_scanf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  184:  int __cdecl __mingw_vfscanf (FILE * __restrict__ fp, const char * __restrict__ Format,va_list argp);
        -:  185:
        -:  186:extern
        -:  187:  __attribute__((__format__ (gnu_printf, 3, 0))) __MINGW_ATTRIB_NONNULL(3)
        -:  188:  int __cdecl __mingw_vsnprintf(char * __restrict__ _DstBuf,size_t _MaxCount,const char * __restrict__ _Format,
        -:  189:                               va_list _ArgList);
        -:  190:extern
        -:  191:  __attribute__((__format__ (gnu_printf, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
        -:  192:  int __cdecl __mingw_snprintf(char * __restrict__ s, size_t n, const char * __restrict__  format, ...);
        -:  193:extern
        -:  194:  __attribute__((__format__ (gnu_printf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
        -:  195:  int __cdecl __mingw_printf(const char * __restrict__ , ... ) __MINGW_NOTHROW;
        -:  196:extern
        -:  197:  __attribute__((__format__ (gnu_printf, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
        -:  198:  int __cdecl __mingw_vprintf (const char * __restrict__ , va_list) __MINGW_NOTHROW;
        -:  199:extern
        -:  200:  __attribute__((__format__ (gnu_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  201:  int __cdecl __mingw_fprintf (FILE * __restrict__ , const char * __restrict__ , ...) __MINGW_NOTHROW;
        -:  202:extern
        -:  203:  __attribute__((__format__ (gnu_printf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  204:  int __cdecl __mingw_vfprintf (FILE * __restrict__ , const char * __restrict__ , va_list) __MINGW_NOTHROW;
        -:  205:extern
        -:  206:  __attribute__((__format__ (gnu_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  207:  int __cdecl __mingw_sprintf (char * __restrict__ , const char * __restrict__ , ...) __MINGW_NOTHROW;
        -:  208:extern
        -:  209:  __attribute__((__format__ (gnu_printf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  210:  int __cdecl __mingw_vsprintf (char * __restrict__ , const char * __restrict__ , va_list) __MINGW_NOTHROW;
        -:  211:extern
        -:  212:  __attribute__((__format__ (gnu_printf, 2, 3))) __attribute__((nonnull (1,2)))
        -:  213:  int __cdecl __mingw_asprintf(char ** __restrict__ , const char * __restrict__ , ...) __MINGW_NOTHROW;
        -:  214:extern
        -:  215:  __attribute__((__format__ (gnu_printf, 2, 0))) __attribute__((nonnull (1,2)))
        -:  216:  int __cdecl __mingw_vasprintf(char ** __restrict__ , const char * __restrict__ , va_list) __MINGW_NOTHROW;
        -:  217:
        -:  218:extern
        -:  219:  __attribute__((__format__ (ms_scanf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  220:  int __cdecl __ms_sscanf(const char * __restrict__ _Src,const char * __restrict__ _Format,...);
        -:  221:extern
        -:  222:  __attribute__((__format__ (ms_scanf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
        -:  223:  int __cdecl __ms_scanf(const char * __restrict__ _Format,...);
        -:  224:extern
        -:  225:  __attribute__((__format__ (ms_scanf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  226:  int __cdecl __ms_fscanf(FILE * __restrict__ _File,const char * __restrict__ _Format,...);
        -:  227:
        -:  228:extern
        -:  229:  __attribute__((__format__ (ms_printf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
        -:  230:  int __cdecl __ms_printf(const char * __restrict__ , ... ) __MINGW_NOTHROW;
        -:  231:extern
        -:  232:  __attribute__((__format__ (ms_printf, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
        -:  233:  int __cdecl __ms_vprintf (const char * __restrict__ , va_list) __MINGW_NOTHROW;
        -:  234:extern
        -:  235:  __attribute__((__format__ (ms_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  236:  int __cdecl __ms_fprintf (FILE * __restrict__ , const char * __restrict__ , ...) __MINGW_NOTHROW;
        -:  237:extern
        -:  238:  __attribute__((__format__ (ms_printf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  239:  int __cdecl __ms_vfprintf (FILE * __restrict__ , const char * __restrict__ , va_list) __MINGW_NOTHROW;
        -:  240:extern
        -:  241:  __attribute__((__format__ (ms_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  242:  int __cdecl __ms_sprintf (char * __restrict__ , const char * __restrict__ , ...) __MINGW_NOTHROW;
        -:  243:extern
        -:  244:  __attribute__((__format__ (ms_printf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  245:  int __cdecl __ms_vsprintf (char * __restrict__ , const char * __restrict__ , va_list) __MINGW_NOTHROW;
        -:  246:
        -:  247:#ifdef _UCRT
        -:  248:  int __cdecl __stdio_common_vsprintf(unsigned __int64 options, char *str, size_t len, const char *format, _locale_t locale, va_list valist);
        -:  249:  int __cdecl __stdio_common_vfprintf(unsigned __int64 options, FILE *file, const char *format, _locale_t locale, va_list valist);
        -:  250:  int __cdecl __stdio_common_vsscanf(unsigned __int64 options, const char *input, size_t length, const char *format, _locale_t locale, va_list valist);
        -:  251:  int __cdecl __stdio_common_vfscanf(unsigned __int64 options, FILE *file, const char *format, _locale_t locale, va_list valist);
        -:  252:#endif
        -:  253:
        -:  254:#undef __MINGW_PRINTF_FORMAT
        -:  255:#undef __MINGW_SCANF_FORMAT
        -:  256:
        -:  257:#if defined(__clang__)
        -:  258:#define __MINGW_PRINTF_FORMAT printf
        -:  259:#define __MINGW_SCANF_FORMAT  scanf
        -:  260:#elif defined(_UCRT) || __USE_MINGW_ANSI_STDIO
        -:  261:#define __MINGW_PRINTF_FORMAT gnu_printf
        -:  262:#define __MINGW_SCANF_FORMAT  gnu_scanf
        -:  263:#else
        -:  264:#define __MINGW_PRINTF_FORMAT ms_printf
        -:  265:#define __MINGW_SCANF_FORMAT  ms_scanf
        -:  266:#endif
        -:  267:
        -:  268:#if __USE_MINGW_ANSI_STDIO && !defined(_CRTBLD)
        -:  269:/*
        -:  270: * User has expressed a preference for C99 conformance...
        -:  271: */
        -:  272:
        -:  273:#ifdef _GNU_SOURCE
        -:  274:__mingw_ovr
        -:  275:__attribute__ ((__format__ (gnu_printf, 2, 3))) __attribute__((nonnull (1,2)))
        -:  276:int asprintf(char **__ret, const char *__format, ...)
        -:  277:{
        -:  278:  int __retval;
        -:  279:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
        -:  280:  __retval = __mingw_vasprintf( __ret, __format, __local_argv );
        -:  281:  __builtin_va_end( __local_argv );
        -:  282:  return __retval;
        -:  283:}
        -:  284:
        -:  285:__mingw_ovr
        -:  286:__attribute__ ((__format__ (gnu_printf, 2, 0))) __attribute__((nonnull (1,2)))
        -:  287:int vasprintf(char **__ret, const char *__format, __builtin_va_list __local_argv)
        -:  288:{
        -:  289:  return __mingw_vasprintf( __ret, __format, __local_argv );
        -:  290:}
        -:  291:#endif /* _GNU_SOURCE */
        -:  292:
        -:  293:/* There seems to be a bug about builtins and static overrides of them
        -:  294:   in g++.  So we need to do here some trickery.  */
        -:  295:#ifdef __cplusplus
        -:  296:extern "C++" {
        -:  297:#endif
        -:  298:
        -:  299:__mingw_ovr
        -:  300:__attribute__((__format__ (gnu_scanf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  301:int sscanf(const char *__source, const char *__format, ...)
        -:  302:{
        -:  303:  int __retval;
        -:  304:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
        -:  305:  __retval = __mingw_vsscanf( __source, __format, __local_argv );
        -:  306:  __builtin_va_end( __local_argv );
        -:  307:  return __retval;
        -:  308:}
        -:  309:
        -:  310:__mingw_ovr
        -:  311:__attribute__((__format__ (gnu_scanf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
    #####:  312:int scanf(const char *__format, ...)
        -:  313:{
        -:  314:  int __retval;
    #####:  315:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
    #####:  316:  __retval = __mingw_vfscanf( stdin, __format, __local_argv );
    #####:  317:  __builtin_va_end( __local_argv );
    #####:  318:  return __retval;
        -:  319:}
        -:  320:
        -:  321:__mingw_ovr
        -:  322:__attribute__((__format__ (gnu_scanf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
       33:  323:int fscanf(FILE *__stream, const char *__format, ...)
        -:  324:{
        -:  325:  int __retval;
       33:  326:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
       33:  327:  __retval = __mingw_vfscanf( __stream, __format, __local_argv );
       33:  328:  __builtin_va_end( __local_argv );
       33:  329:  return __retval;
        -:  330:}
        -:  331:
        -:  332:#ifndef __NO_ISOCEXT  /* externs in libmingwex.a */
        -:  333:#ifdef __GNUC__
        -:  334:#pragma GCC diagnostic push
        -:  335:#pragma GCC diagnostic ignored "-Wshadow"
        -:  336:#endif
        -:  337:
        -:  338:__mingw_ovr
        -:  339:__attribute__((__format__ (gnu_scanf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  340:int vsscanf (const char *__source, const char *__format, __builtin_va_list __local_argv)
        -:  341:{
        -:  342:  return __mingw_vsscanf( __source, __format, __local_argv );
        -:  343:}
        -:  344:
        -:  345:__mingw_ovr
        -:  346:__attribute__((__format__ (gnu_scanf, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
        -:  347:int vscanf(const char *__format,  __builtin_va_list __local_argv)
        -:  348:{
        -:  349:  return __mingw_vfscanf( stdin, __format, __local_argv );
        -:  350:}
        -:  351:
        -:  352:__mingw_ovr
        -:  353:__attribute__((__format__ (gnu_scanf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  354:int vfscanf (FILE *__stream,  const char *__format, __builtin_va_list __local_argv)
        -:  355:{
        -:  356:  return __mingw_vfscanf( __stream, __format, __local_argv );
        -:  357:}
        -:  358:
        -:  359:#ifdef __GNUC__
        -:  360:#pragma GCC diagnostic pop
        -:  361:#endif
        -:  362:#endif /* __NO_ISOCEXT */
        -:  363:
        -:  364:
        -:  365:
        -:  366:__mingw_ovr
        -:  367:__attribute__((__format__ (gnu_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
    #####:  368:int fprintf (FILE *__stream, const char *__format, ...)
        -:  369:{
        -:  370:  int __retval;
    #####:  371:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
    #####:  372:  __retval = __mingw_vfprintf( __stream, __format, __local_argv );
    #####:  373:  __builtin_va_end( __local_argv );
    #####:  374:  return __retval;
        -:  375:}
        -:  376:
        -:  377:__mingw_ovr
        -:  378:__attribute__((__format__ (gnu_printf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
    #####:  379:int printf (const char *__format, ...)
        -:  380:{
        -:  381:  int __retval;
    #####:  382:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
    #####:  383:  __retval = __mingw_vfprintf( stdout, __format, __local_argv );
    #####:  384:  __builtin_va_end( __local_argv );
    #####:  385:  return __retval;
        -:  386:}
        -:  387:
        -:  388:#if __MINGW_FORTIFY_VA_ARG
        -:  389:
        -:  390:int sprintf (char *__stream, const char *__format, ...) __MINGW_ASM_CALL(__mingw_sprintf);
        -:  391:
        -:  392:__mingw_bos_extern_ovr
        -:  393:__attribute__((__format__ (gnu_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  394:int sprintf (char *__stream, const char *__format, ...)
        -:  395:{
        -:  396:  if (__mingw_bos_known(__stream)) {
        -:  397:    int __retval = __mingw_snprintf( __stream, __mingw_bos(__stream, 1), __format, __builtin_va_arg_pack() );
        -:  398:    if (__retval >= 0)
        -:  399:      __mingw_bos_ptr_chk(__stream, (size_t)__retval + 1, 1);
        -:  400:    return __retval;
        -:  401:  }
        -:  402:  return __mingw_sprintf( __stream, __format, __builtin_va_arg_pack() );
        -:  403:}
        -:  404:
        -:  405:#else /* !__MINGW_FORTIFY_VA_ARG */
        -:  406:
        -:  407:__mingw_ovr
        -:  408:__attribute__((__format__ (gnu_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  409:int sprintf (char *__stream, const char *__format, ...)
        -:  410:{
        -:  411:  int __retval;
        -:  412:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
        -:  413:  __retval = __mingw_vsprintf( __stream, __format, __local_argv );
        -:  414:  __builtin_va_end( __local_argv );
        -:  415:  return __retval;
        -:  416:}
        -:  417:
        -:  418:#endif /* __MINGW_FORTIFY_VA_ARG */
        -:  419:
        -:  420:__mingw_ovr
        -:  421:__attribute__((__format__ (gnu_printf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  422:int vfprintf (FILE *__stream, const char *__format, __builtin_va_list __local_argv)
        -:  423:{
        -:  424:  return __mingw_vfprintf( __stream, __format, __local_argv );
        -:  425:}
        -:  426:
        -:  427:__mingw_ovr
        -:  428:__attribute__((__format__ (gnu_printf, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
        -:  429:int vprintf (const char *__format, __builtin_va_list __local_argv)
        -:  430:{
        -:  431:  return __mingw_vfprintf( stdout, __format, __local_argv );
        -:  432:}
        -:  433:
        -:  434:__mingw_bos_ovr
        -:  435:__attribute__((__format__ (gnu_printf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  436:int vsprintf (char *__stream, const char *__format, __builtin_va_list __local_argv)
        -:  437:{
        -:  438:#if __MINGW_FORTIFY_LEVEL > 0
        -:  439:  if (__mingw_bos_known(__stream)) {
        -:  440:    int __retval = __mingw_vsnprintf( __stream, __mingw_bos(__stream, 1), __format, __local_argv );
        -:  441:    if (__retval >= 0)
        -:  442:      __mingw_bos_ptr_chk(__stream, (size_t)__retval + 1, 1);
        -:  443:    return __retval;
        -:  444:  }
        -:  445:#endif
        -:  446:  return __mingw_vsprintf( __stream, __format, __local_argv );
        -:  447:}
        -:  448:/* #ifndef __NO_ISOCEXT */  /* externs in libmingwex.a */
        -:  449:
        -:  450:#if __MINGW_FORTIFY_VA_ARG
        -:  451:
        -:  452:int snprintf (char *__stream, size_t __n, const char *__format, ...) __MINGW_ASM_CALL(__mingw_snprintf);
        -:  453:
        -:  454:__mingw_bos_extern_ovr
        -:  455:__attribute__((__format__ (gnu_printf, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
        -:  456:int snprintf (char *__stream, size_t __n, const char *__format, ...)
        -:  457:{
        -:  458:  __mingw_bos_ptr_chk_warn(__stream, __n, 1);
        -:  459:  return __mingw_snprintf( __stream, __n, __format, __builtin_va_arg_pack() );
        -:  460:}
        -:  461:
        -:  462:#else /* !__MINGW_FORTIFY_VA_ARG */
        -:  463:
        -:  464:__mingw_ovr
        -:  465:__attribute__((__format__ (gnu_printf, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
        -:  466:int snprintf (char *__stream, size_t __n, const char *__format, ...)
        -:  467:{
        -:  468:  int __retval;
        -:  469:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
        -:  470:  __retval = __mingw_vsnprintf( __stream, __n, __format, __local_argv );
        -:  471:  __builtin_va_end( __local_argv );
        -:  472:  return __retval;
        -:  473:}
        -:  474:
        -:  475:#endif /* __MINGW_FORTIFY_VA_ARG */
        -:  476:
        -:  477:__mingw_bos_ovr
        -:  478:__attribute__((__format__ (gnu_printf, 3, 0))) __MINGW_ATTRIB_NONNULL(3)
        -:  479:int vsnprintf (char *__stream, size_t __n, const char *__format, __builtin_va_list __local_argv)
        -:  480:{
        -:  481:#if __MINGW_FORTIFY_LEVEL > 0
        -:  482:  __mingw_bos_ptr_chk_warn(__stream, __n, 1);
        -:  483:#endif
        -:  484:  return __mingw_vsnprintf( __stream, __n, __format, __local_argv );
        -:  485:}
        -:  486:
        -:  487:/* Override __builtin_printf-routines ... Kludge for libstdc++ ...*/
        -:  488:#define __builtin_vsnprintf __mingw_vsnprintf
        -:  489:#define __builtin_vsprintf __mingw_vsprintf
        -:  490:
        -:  491:/* #endif */ /* __NO_ISOCEXT */
        -:  492:
        -:  493:#ifdef __cplusplus
        -:  494:}
        -:  495:#endif
        -:  496:
        -:  497:#else /* !__USE_MINGW_ANSI_STDIO */
        -:  498:
        -:  499:#undef __builtin_vsnprintf
        -:  500:#undef __builtin_vsprintf
        -:  501:
        -:  502:/*
        -:  503: * Default configuration: simply direct all calls to MSVCRT...
        -:  504: */
        -:  505:#ifdef _UCRT
        -:  506:#ifdef __GNUC__
        -:  507:#pragma GCC diagnostic push
        -:  508:#pragma GCC diagnostic ignored "-Wshadow"
        -:  509:#endif
        -:  510:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  511:  int __cdecl fprintf(FILE * __restrict__ _File,const char * __restrict__ _Format,...);
        -:  512:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
        -:  513:  int __cdecl printf(const char * __restrict__ _Format,...);
        -:  514:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  515:  int __cdecl sprintf(char * __restrict__ _Dest,const char * __restrict__ _Format,...) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  516:
        -:  517:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  518:  int __cdecl vfprintf(FILE * __restrict__ _File,const char * __restrict__ _Format,va_list _ArgList);
        -:  519:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
        -:  520:  int __cdecl vprintf(const char * __restrict__ _Format,va_list _ArgList);
        -:  521:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  522:  int __cdecl vsprintf(char * __restrict__ _Dest,const char * __restrict__ _Format,va_list _Args) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  523:
        -:  524:  __MINGW_ATTRIB_DEPRECATED_SEC_WARN
        -:  525:  __attribute__((__format__ (__MINGW_SCANF_FORMAT, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  526:  int __cdecl fscanf(FILE * __restrict__ _File,const char * __restrict__ _Format,...);
        -:  527:  __MINGW_ATTRIB_DEPRECATED_SEC_WARN
        -:  528:  __attribute__((__format__ (__MINGW_SCANF_FORMAT, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
        -:  529:  int __cdecl scanf(const char * __restrict__ _Format,...);
        -:  530:  __MINGW_ATTRIB_DEPRECATED_SEC_WARN
        -:  531:  __attribute__((__format__ (__MINGW_SCANF_FORMAT, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  532:  int __cdecl sscanf(const char * __restrict__ _Src,const char * __restrict__ _Format,...);
        -:  533:#ifdef _GNU_SOURCE
        -:  534:  __attribute__ ((__format__ (__MINGW_PRINTF_FORMAT, 2, 0)))
        -:  535:  int __cdecl vasprintf(char ** __restrict__ _Ret,const char * __restrict__ _Format,va_list _Args);
        -:  536:  __attribute__ ((__format__ (__MINGW_PRINTF_FORMAT, 2, 3)))
        -:  537:  int __cdecl asprintf(char ** __restrict__ _Ret,const char * __restrict__ _Format,...);
        -:  538:#endif /*_GNU_SOURCE*/
        -:  539:
        -:  540:  __attribute__((__format__ (__MINGW_SCANF_FORMAT, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  541:  int vfscanf (FILE *__stream,  const char *__format, __builtin_va_list __local_argv);
        -:  542:
        -:  543:  __attribute__((__format__ (__MINGW_SCANF_FORMAT, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  544:  int vsscanf (const char * __restrict__ __source, const char * __restrict__ __format, __builtin_va_list __local_argv);
        -:  545:  __attribute__((__format__ (__MINGW_SCANF_FORMAT, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
        -:  546:  int vscanf(const char *__format,  __builtin_va_list __local_argv);
        -:  547:
        -:  548:#ifdef __GNUC__
        -:  549:#pragma GCC diagnostic pop
        -:  550:#endif
        -:  551:
        -:  552:#else
        -:  553:  __attribute__((__format__ (ms_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  554:  int __cdecl fprintf(FILE * __restrict__ _File,const char * __restrict__ _Format,...);
        -:  555:  __attribute__((__format__ (ms_printf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
        -:  556:  int __cdecl printf(const char * __restrict__ _Format,...);
        -:  557:  __attribute__((__format__ (ms_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  558:  int __cdecl sprintf(char * __restrict__ _Dest,const char * __restrict__ _Format,...) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  559:
        -:  560:  __attribute__((__format__ (ms_printf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  561:  int __cdecl vfprintf(FILE * __restrict__ _File,const char * __restrict__ _Format,va_list _ArgList);
        -:  562:  __attribute__((__format__ (ms_printf, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
        -:  563:  int __cdecl vprintf(const char * __restrict__ _Format,va_list _ArgList);
        -:  564:  __attribute__((__format__ (ms_printf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  565:  int __cdecl vsprintf(char * __restrict__ _Dest,const char * __restrict__ _Format,va_list _Args) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  566:
        -:  567:  __attribute__((__format__ (ms_scanf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  568:  int __cdecl fscanf(FILE * __restrict__ _File,const char * __restrict__ _Format,...) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  569:  __attribute__((__format__ (ms_scanf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
        -:  570:  int __cdecl scanf(const char * __restrict__ _Format,...) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  571:  __attribute__((__format__ (ms_scanf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  572:  int __cdecl sscanf(const char * __restrict__ _Src,const char * __restrict__ _Format,...) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  573:#ifdef _GNU_SOURCE
        -:  574:  int __cdecl vasprintf(char ** __restrict__ __ret,const char * __restrict__ __format,va_list __ap)  __attribute__ ((format (__MINGW_PRINTF_FORMAT, 2, 0)));
        -:  575:  int __cdecl asprintf(char ** __restrict__ __ret,const char * __restrict__ __format,...) __attribute__ ((format (__MINGW_PRINTF_FORMAT, 2, 3)));
        -:  576:#endif /*_GNU_SOURCE*/
        -:  577:#ifndef __NO_ISOCEXT  /* externs in libmingwex.a */
        -:  578:#ifdef __GNUC__
        -:  579:#pragma GCC diagnostic push
        -:  580:#pragma GCC diagnostic ignored "-Wshadow"
        -:  581:#endif
        -:  582:
        -:  583:  __attribute__((__format__ (ms_scanf, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
        -:  584:  int __cdecl __ms_vscanf(const char * __restrict__ Format, va_list argp);
        -:  585:  __attribute__((__format__ (ms_scanf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  586:  int __cdecl __ms_vfscanf (FILE * __restrict__ fp, const char * __restrict__ Format,va_list argp);
        -:  587:  __attribute__((__format__ (ms_scanf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  588:  int __cdecl __ms_vsscanf (const char * __restrict__ _Str,const char * __restrict__ Format,va_list argp);
        -:  589:
        -:  590:  __mingw_ovr
        -:  591:  __attribute__((__format__ (ms_scanf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  592:  int vfscanf (FILE *__stream,  const char *__format, __builtin_va_list __local_argv)
        -:  593:  {
        -:  594:    return __ms_vfscanf (__stream, __format, __local_argv);
        -:  595:  }
        -:  596:
        -:  597:  __mingw_ovr
        -:  598:  __attribute__((__format__ (ms_scanf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  599:  int vsscanf (const char * __restrict__ __source, const char * __restrict__ __format, __builtin_va_list __local_argv)
        -:  600:  {
        -:  601:    return __ms_vsscanf( __source, __format, __local_argv );
        -:  602:  }
        -:  603:  __mingw_ovr
        -:  604:  __attribute__((__format__ (ms_scanf, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
        -:  605:  int vscanf(const char *__format,  __builtin_va_list __local_argv)
        -:  606:  {
        -:  607:    return __ms_vscanf (__format, __local_argv);
        -:  608:  }
        -:  609:
        -:  610:#ifdef __GNUC__
        -:  611:#pragma GCC diagnostic pop
        -:  612:#endif
        -:  613:
        -:  614:#endif /* __NO_ISOCEXT */
        -:  615:#endif /* _UCRT */
        -:  616:#endif /* __USE_MINGW_ANSI_STDIO */
        -:  617:
        -:  618:  _CRTIMP int __cdecl _filbuf(FILE *_File);
        -:  619:  _CRTIMP int __cdecl _flsbuf(int _Ch,FILE *_File);
        -:  620:#ifdef _POSIX_
        -:  621:  _CRTIMP FILE *__cdecl _fsopen(const char *_Filename,const char *_Mode);
        -:  622:#else
        -:  623:  _CRTIMP FILE *__cdecl _fsopen(const char *_Filename,const char *_Mode,int _ShFlag);
        -:  624:#endif
        -:  625:  void __cdecl clearerr(FILE *_File);
        -:  626:  int __cdecl fclose(FILE *_File);
        -:  627:  _CRTIMP int __cdecl _fcloseall(void);
        -:  628:#ifdef _POSIX_
        -:  629:  FILE *__cdecl fdopen(int _FileHandle,const char *_Mode) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -:  630:#else
        -:  631:  _CRTIMP FILE *__cdecl _fdopen(int _FileHandle,const char *_Mode);
        -:  632:#endif
        -:  633:  int __cdecl feof(FILE *_File);
        -:  634:  int __cdecl ferror(FILE *_File);
        -:  635:  int __cdecl fflush(FILE *_File);
        -:  636:  int __cdecl fgetc(FILE *_File);
        -:  637:  _CRTIMP int __cdecl _fgetchar(void);
        -:  638:  int __cdecl fgetpos(FILE * __restrict__ _File ,fpos_t * __restrict__ _Pos); /* 64bit only, no 32bit version */
        -:  639:  int __cdecl fgetpos64(FILE * __restrict__ _File ,fpos_t * __restrict__ _Pos); /* fgetpos already 64bit */
        -:  640:  char *__cdecl fgets(char * __restrict__ _Buf,int _MaxCount,FILE * __restrict__ _File);
        -:  641:  _CRTIMP int __cdecl _fileno(FILE *_File);
        -:  642:#ifdef _POSIX_
        -:  643:  int __cdecl fileno(FILE *_File) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -:  644:#endif
        -:  645:  _CRTIMP char *__cdecl _tempnam(const char *_DirName,const char *_FilePrefix);
        -:  646:  _CRTIMP int __cdecl _flushall(void);
        -:  647:  FILE *__cdecl fopen(const char * __restrict__ _Filename,const char * __restrict__ _Mode) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  648:  FILE *fopen64(const char * __restrict__ filename,const char * __restrict__  mode);
        -:  649:  int __cdecl fputc(int _Ch,FILE *_File);
        -:  650:  _CRTIMP int __cdecl _fputchar(int _Ch);
        -:  651:  int __cdecl fputs(const char * __restrict__ _Str,FILE * __restrict__ _File);
        -:  652:  size_t __cdecl fread(void * __restrict__ _DstBuf,size_t _ElementSize,size_t _Count,FILE * __restrict__ _File);
        -:  653:  FILE *__cdecl freopen(const char * __restrict__ _Filename,const char * __restrict__ _Mode,FILE * __restrict__ _File) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  654:  int __cdecl fsetpos(FILE *_File,const fpos_t *_Pos);
        -:  655:  int __cdecl fsetpos64(FILE *_File,const fpos_t *_Pos); /* fsetpos already 64bit */
        -:  656:  int __cdecl fseek(FILE *_File,long _Offset,int _Origin);
        -:  657:  long __cdecl ftell(FILE *_File);
        -:  658:
        -:  659:  /* Shouldn't be any fseeko32 in glibc, 32bit to 64bit casting should be fine */
        -:  660:  /* int fseeko32(FILE* stream, _off_t offset, int whence);*/ /* fseeko32 redirects to fseeko64 */
        -:  661:  _CRTIMP int __cdecl _fseeki64(FILE *_File,__int64 _Offset,int _Origin);
        -:  662:  _CRTIMP __int64 __cdecl _ftelli64(FILE *_File);
        -:  663:#ifdef _UCRT
        -:  664:  __mingw_static_ovr int fseeko(FILE *_File, _off_t _Offset, int _Origin) {
        -:  665:    return fseek(_File, _Offset, _Origin);
        -:  666:  }
        -:  667:  __mingw_static_ovr int fseeko64(FILE *_File, _off64_t _Offset, int _Origin) {
        -:  668:    return _fseeki64(_File, _Offset, _Origin);
        -:  669:  }
        -:  670:  __mingw_static_ovr _off_t ftello(FILE *_File) {
        -:  671:    return ftell(_File);
        -:  672:  }
        -:  673:  __mingw_static_ovr _off64_t ftello64(FILE *_File) {
        -:  674:    return _ftelli64(_File);
        -:  675:  }
        -:  676:#else
        -:  677:  int fseeko64(FILE* stream, _off64_t offset, int whence);
        -:  678:  int fseeko(FILE* stream, _off_t offset, int whence);
        -:  679:  /* Returns truncated 64bit off_t */
        -:  680:  _off_t ftello(FILE * stream);
        -:  681:  _off64_t ftello64(FILE * stream);
        -:  682:#endif
        -:  683:
        -:  684:#ifndef _FILE_OFFSET_BITS_SET_FSEEKO
        -:  685:#define _FILE_OFFSET_BITS_SET_FSEEKO
        -:  686:#if (defined(_FILE_OFFSET_BITS) && (_FILE_OFFSET_BITS == 64))
        -:  687:#define fseeko fseeko64
        -:  688:#endif /* (defined(_FILE_OFFSET_BITS) && (_FILE_OFFSET_BITS == 64)) */
        -:  689:#endif /* _FILE_OFFSET_BITS_SET_FSEEKO */
        -:  690:
        -:  691:#ifndef _FILE_OFFSET_BITS_SET_FTELLO
        -:  692:#define _FILE_OFFSET_BITS_SET_FTELLO
        -:  693:#if (defined(_FILE_OFFSET_BITS) && (_FILE_OFFSET_BITS == 64))
        -:  694:#define ftello ftello64
        -:  695:#endif /* (defined(_FILE_OFFSET_BITS) && (_FILE_OFFSET_BITS == 64)) */
        -:  696:#endif /* _FILE_OFFSET_BITS_SET_FTELLO */
        -:  697:
        -:  698:  size_t __cdecl fwrite(const void * __restrict__ _Str,size_t _Size,size_t _Count,FILE * __restrict__ _File);
        -:  699:  int __cdecl getc(FILE *_File);
        -:  700:  int __cdecl getchar(void);
        -:  701:  _CRTIMP int __cdecl _getmaxstdio(void);
        -:  702:  char *__cdecl gets(char *_Buffer)
        -:  703:    __attribute__((__warning__("Using gets() is always unsafe - use fgets() instead")));
        -:  704:  int __cdecl _getw(FILE *_File);
        -:  705:#ifndef _CRT_PERROR_DEFINED
        -:  706:#define _CRT_PERROR_DEFINED
        -:  707:  void __cdecl perror(const char *_ErrMsg);
        -:  708:#endif
        -:  709:#ifdef _CRT_USE_WINAPI_FAMILY_DESKTOP_APP
        -:  710:  _CRTIMP int __cdecl _pclose(FILE *_File);
        -:  711:  _CRTIMP FILE *__cdecl _popen(const char *_Command,const char *_Mode);
        -:  712:#if !defined(NO_OLDNAMES) && !defined(popen)
        -:  713:#define popen	_popen
        -:  714:#define pclose	_pclose
        -:  715:#endif
        -:  716:#endif /* _CRT_USE_WINAPI_FAMILY_DESKTOP_APP */
        -:  717:  int __cdecl putc(int _Ch,FILE *_File);
        -:  718:  int __cdecl putchar(int _Ch);
        -:  719:  int __cdecl puts(const char *_Str);
        -:  720:  _CRTIMP int __cdecl _putw(int _Word,FILE *_File);
        -:  721:#ifndef _CRT_DIRECTORY_DEFINED
        -:  722:#define _CRT_DIRECTORY_DEFINED
        -:  723:  int __cdecl remove(const char *_Filename);
        -:  724:  int __cdecl rename(const char *_OldFilename,const char *_NewFilename);
        -:  725:  _CRTIMP int __cdecl _unlink(const char *_Filename);
        -:  726:#ifndef	NO_OLDNAMES
        -:  727:  int __cdecl unlink(const char *_Filename) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -:  728:#endif
        -:  729:#endif
        -:  730:  void __cdecl rewind(FILE *_File);
        -:  731:  _CRTIMP int __cdecl _rmtmp(void);
        -:  732:  void __cdecl setbuf(FILE * __restrict__ _File,char * __restrict__ _Buffer) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  733:  _CRTIMP int __cdecl _setmaxstdio(int _Max);
        -:  734:  _CRTIMP unsigned int __cdecl _set_output_format(unsigned int _Format);
        -:  735:  _CRTIMP unsigned int __cdecl _get_output_format(void);
        -:  736:  int __cdecl setvbuf(FILE * __restrict__ _File,char * __restrict__ _Buf,int _Mode,size_t _Size);
        -:  737:#ifdef _UCRT
        -:  738:  __mingw_ovr
        -:  739:  __MINGW_ATTRIB_PURE
        -:  740:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
        -:  741:  int __cdecl _scprintf(const char * __restrict__ _Format,...)
        -:  742:  {
        -:  743:    __builtin_va_list __ap;
        -:  744:    int __ret;
        -:  745:    __builtin_va_start(__ap, _Format);
        -:  746:    __ret = __stdio_common_vsprintf(_CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR, NULL, 0, _Format, NULL, __ap);
        -:  747:    __builtin_va_end(__ap);
        -:  748:    return __ret;
        -:  749:  }
        -:  750:  __mingw_ovr __MINGW_ATTRIB_DEPRECATED_SEC_WARN
        -:  751:  __attribute__((__format__ (__MINGW_SCANF_FORMAT, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
        -:  752:  int __cdecl _snscanf(const char * __restrict__ _Src,size_t _MaxCount,const char * __restrict__ _Format,...)
        -:  753:  {
        -:  754:    __builtin_va_list __ap;
        -:  755:    int __ret;
        -:  756:    __builtin_va_start(__ap, _Format);
        -:  757:    __ret = __stdio_common_vsscanf(0, _Src, _MaxCount, _Format, NULL, __ap);
        -:  758:    __builtin_va_end(__ap);
        -:  759:    return __ret;
        -:  760:  }
        -:  761:#else
        -:  762:  __MINGW_ATTRIB_PURE
        -:  763:  __attribute__((__format__ (ms_printf, 1, 2))) __MINGW_ATTRIB_NONNULL(1)
        -:  764:  _CRTIMP int __cdecl _scprintf(const char * __restrict__ _Format,...);
        -:  765:  __attribute__((__format__ (ms_scanf, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
        -:  766:  _CRTIMP int __cdecl _snscanf(const char * __restrict__ _Src,size_t _MaxCount,const char * __restrict__ _Format,...) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  767:#endif
        -:  768:  __MINGW_ATTRIB_PURE
        -:  769:  __attribute__((__format__ (ms_printf, 1, 0))) __MINGW_ATTRIB_NONNULL(1)
        -:  770:  _CRTIMP int __cdecl _vscprintf(const char * __restrict__ _Format,va_list _ArgList);
        -:  771:  FILE *__cdecl tmpfile(void) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  772:  char *__cdecl tmpnam(char *_Buffer);
        -:  773:  int __cdecl ungetc(int _Ch,FILE *_File);
        -:  774:
        -:  775:#ifdef _UCRT
        -:  776:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 3, 0))) __MINGW_ATTRIB_NONNULL(3)
        -:  777:  int __cdecl _vsnprintf(char * __restrict__ _Dest,size_t _Count,const char * __restrict__ _Format,va_list _Args) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  778:  __mingw_ovr __MINGW_ATTRIB_DEPRECATED_SEC_WARN
        -:  779:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
        -:  780:  int __cdecl _snprintf(char * __restrict__ _Dest,size_t _Count,const char * __restrict__ _Format,...)
        -:  781:  {
        -:  782:    __builtin_va_list __ap;
        -:  783:    int __ret;
        -:  784:    __builtin_va_start(__ap, _Format);
        -:  785:    __ret = _vsnprintf(_Dest, _Count, _Format, __ap);
        -:  786:    __builtin_va_end(__ap);
        -:  787:    return __ret;
        -:  788:  }
        -:  789:#else
        -:  790:  __attribute__((__format__ (ms_printf, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
        -:  791:  _CRTIMP int __cdecl _snprintf(char * __restrict__ _Dest,size_t _Count,const char * __restrict__ _Format,...) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  792:  __attribute__((__format__ (ms_printf, 3, 0))) __MINGW_ATTRIB_NONNULL(3)
        -:  793:  _CRTIMP int __cdecl _vsnprintf(char * __restrict__ _Dest,size_t _Count,const char * __restrict__ _Format,va_list _Args) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  794:#endif
        -:  795:
        -:  796:#if __MINGW_FORTIFY_LEVEL > 0
        -:  797:
        -:  798:char * __cdecl __gets_chk(char *, size_t);
        -:  799:char * __cdecl __mingw_call_gets_warn(char *) __MINGW_ASM_CALL(gets)
        -:  800:  __attribute__((__warning__("Using gets() is always unsafe - use fgets() instead")));
        -:  801:char * __cdecl __mingw_call_fgets(char * __restrict__, int, FILE * __restrict__) __MINGW_ASM_CALL(fgets);
        -:  802:size_t __cdecl __mingw_call_fread(void * __restrict__, size_t, size_t, FILE * __restrict__) __MINGW_ASM_CALL(fread);
        -:  803:char * __cdecl __mingw_call_tmpnam(char *) __MINGW_ASM_CALL(tmpnam);
        -:  804:
        -:  805:__mingw_bos_extern_ovr
        -:  806:char * gets(char * __dst)
        -:  807:{
        -:  808:  if (__mingw_bos_known(__dst))
        -:  809:    return __gets_chk(__dst, __mingw_bos(__dst, 1));
        -:  810:  return __mingw_call_gets_warn(__dst);
        -:  811:}
        -:  812:
        -:  813:__mingw_bos_extern_ovr
        -:  814:char * fgets(char * __restrict__ __dst, int __n, FILE * __restrict__ __f)
        -:  815:{
        -:  816:  __mingw_bos_ptr_chk_warn(__dst, __n, 1);
        -:  817:  return __mingw_call_fgets(__dst, __n, __f);
        -:  818:}
        -:  819:
        -:  820:__mingw_bos_extern_ovr
        -:  821:size_t fread(void * __restrict__ __dst, size_t __sz, size_t __n, FILE * __restrict__ __f)
        -:  822:{
        -:  823:  __mingw_bos_ptr_chk_warn(__dst, __sz * __n, 0);
        -:  824:  return __mingw_call_fread(__dst, __sz, __n, __f);
        -:  825:}
        -:  826:
        -:  827:__mingw_bos_extern_ovr
        -:  828:char * tmpnam(char * __dst)
        -:  829:{
        -:  830:  __mingw_bos_ptr_chk_warn(__dst, L_tmpnam, 1);
        -:  831:  return __mingw_call_tmpnam(__dst);
        -:  832:}
        -:  833:
        -:  834:#endif /* __MINGW_FORTIFY_LEVEL > 0 */
        -:  835:
        -:  836:#if __USE_MINGW_ANSI_STDIO == 0
        -:  837:
        -:  838:#ifdef _UCRT
        -:  839:#ifdef __GNUC__
        -:  840:#pragma GCC diagnostic push
        -:  841:#pragma GCC diagnostic ignored "-Wshadow"
        -:  842:#endif
        -:  843:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 3, 0))) __MINGW_ATTRIB_NONNULL(3)
        -:  844:  int vsnprintf (char * __restrict__ __stream, size_t __n, const char * __restrict__ __format, va_list __local_argv);
        -:  845:
        -:  846:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
        -:  847:  int snprintf (char * __restrict__ __stream, size_t __n, const char * __restrict__ __format, ...);
        -:  848:
        -:  849:#if __MINGW_FORTIFY_LEVEL > 0
        -:  850:
        -:  851:  int __cdecl __mingw_call_vsprintf (char * __restrict__ __stream, const char * __restrict__ __format, va_list __local_argv) __MINGW_ASM_CALL(vsprintf);
        -:  852:  int __cdecl __mingw_call_vsnprintf (char * __restrict__ __stream, size_t __n, const char * __restrict__ __format, va_list __local_argv) __MINGW_ASM_CALL(vsnprintf);
        -:  853:
        -:  854:  __mingw_bos_extern_ovr
        -:  855:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 2, 0))) __MINGW_ATTRIB_NONNULL(3)
        -:  856:  int vsprintf (char * __restrict__ __stream, const char * __restrict__ __format, va_list __local_argv)
        -:  857:  {
        -:  858:    if (__mingw_bos_known(__stream)) {
        -:  859:      int __retval = __mingw_call_vsnprintf (__stream, __mingw_bos(__stream, 1), __format, __local_argv);
        -:  860:      if (__retval >= 0)
        -:  861:        __mingw_bos_ptr_chk(__stream, (size_t)__retval + 1, 1);
        -:  862:      return __retval;
        -:  863:    }
        -:  864:    return __mingw_call_vsprintf(__stream, __format, __local_argv);
        -:  865:  }
        -:  866:
        -:  867:  __mingw_bos_extern_ovr
        -:  868:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 3, 0))) __MINGW_ATTRIB_NONNULL(3)
        -:  869:  int vsnprintf (char * __restrict__ __stream, size_t __n, const char * __restrict__ __format, va_list __local_argv)
        -:  870:  {
        -:  871:    __mingw_bos_ptr_chk_warn(__stream, __n, 1);
        -:  872:    return __mingw_call_vsnprintf (__stream, __n, __format, __local_argv);
        -:  873:  }
        -:  874:
        -:  875:#endif /* __MINGW_FORTIFY_LEVEL > 0 */
        -:  876:
        -:  877:#if __MINGW_FORTIFY_VA_ARG
        -:  878:
        -:  879:  int __cdecl __mingw_call_sprintf (char * __restrict__ __stream, const char * __restrict__ __Format, ...) __MINGW_ASM_CALL(sprintf);
        -:  880:  int __cdecl __mingw_call_snprintf (char * __restrict__ __stream, size_t __n, const char * __restrict__ __format, ...) __MINGW_ASM_CALL(snprintf);
        -:  881:
        -:  882:  __mingw_bos_extern_ovr
        -:  883:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  884:  int sprintf (char * __restrict__ __stream, const char * __restrict__ __format, ...)
        -:  885:  {
        -:  886:    if (__mingw_bos_known(__stream)) {
        -:  887:      int __retval = __mingw_call_snprintf (__stream, __mingw_bos(__stream, 1), __format, __builtin_va_arg_pack());
        -:  888:      if (__retval >= 0)
        -:  889:        __mingw_bos_ptr_chk(__stream, (size_t)__retval + 1, 1);
        -:  890:      return __retval;
        -:  891:    }
        -:  892:    return __mingw_call_sprintf (__stream, __format, __builtin_va_arg_pack());
        -:  893:  }
        -:  894:
        -:  895:  __mingw_bos_extern_ovr
        -:  896:  __attribute__((__format__ (__MINGW_PRINTF_FORMAT, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
        -:  897:  int snprintf (char * __restrict__ __stream, size_t __n, const char * __restrict__ __format, ...)
        -:  898:  {
        -:  899:    __mingw_bos_ptr_chk_warn(__stream, __n, 1);
        -:  900:    return __mingw_call_snprintf (__stream, __n, __format, __builtin_va_arg_pack());
        -:  901:  }
        -:  902:
        -:  903:#endif /* __MINGW_FORTIFY_VA_ARG */
        -:  904:
        -:  905:#ifdef __GNUC__
        -:  906:#pragma GCC diagnostic pop
        -:  907:#endif
        -:  908:#else /* !_UCRT */
        -:  909:
        -:  910:/* this is here to deal with software defining
        -:  911: * vsnprintf as _vsnprintf, eg. libxml2.  */
        -:  912:
        -:  913:#ifdef __GNUC__
        -:  914:#pragma GCC diagnostic push
        -:  915:#pragma GCC diagnostic ignored "-Wshadow"
        -:  916:#endif
        -:  917:
        -:  918:  __attribute__((__format__ (ms_printf, 3, 0))) __MINGW_ATTRIB_NONNULL(3)
        -:  919:  int __cdecl __ms_vsnprintf(char * __restrict__ d,size_t n,const char * __restrict__ format,va_list arg)
        -:  920:    __MINGW_ATTRIB_DEPRECATED_MSVC2005 __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -:  921:
        -:  922:  __mingw_bos_ovr
        -:  923:  __attribute__((__format__ (ms_printf, 3, 0))) __MINGW_ATTRIB_NONNULL(3)
        -:  924:  int vsnprintf (char * __restrict__ __stream, size_t __n, const char * __restrict__ __format, va_list __local_argv)
        -:  925:  {
        -:  926:#if __MINGW_FORTIFY_LEVEL > 0
        -:  927:    __mingw_bos_ptr_chk_warn(__stream, __n, 1);
        -:  928:#endif
        -:  929:    if (__builtin_constant_p(__n) && __n == 0)
        -:  930:      return _vscprintf(__format, __local_argv);
        -:  931:    return __ms_vsnprintf (__stream, __n, __format, __local_argv);
        -:  932:  }
        -:  933:
        -:  934:  __attribute__((__format__ (ms_printf, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
        -:  935:  int __cdecl __ms_snprintf(char * __restrict__ s, size_t n, const char * __restrict__  format, ...);
        -:  936:
        -:  937:#ifndef __NO_ISOCEXT
        -:  938:#if __MINGW_FORTIFY_VA_ARG
        -:  939:
        -:  940:int snprintf (char * __restrict__ __stream, size_t __n, const char * __restrict__ __format, ...) __MINGW_ASM_CALL(__ms_snprintf);
        -:  941:
        -:  942:__mingw_bos_extern_ovr
        -:  943:__attribute__((__format__ (ms_printf, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
        -:  944:int snprintf (char * __restrict__ __stream, size_t __n, const char * __restrict__ __format, ...)
        -:  945:{
        -:  946:  __mingw_bos_ptr_chk_warn(__stream, __n, 1);
        -:  947:  if (__builtin_constant_p(__n) && __n == 0)
        -:  948:    return _scprintf(__format, __builtin_va_arg_pack());
        -:  949:  return __ms_snprintf(__stream, __n, __format, __builtin_va_arg_pack());
        -:  950:}
        -:  951:
        -:  952:#else /* !__MINGW_FORTIFY_VA_ARG */
        -:  953:
        -:  954:__mingw_ovr
        -:  955:__attribute__((__format__ (ms_printf, 3, 4))) __MINGW_ATTRIB_NONNULL(3)
        -:  956:int snprintf (char * __restrict__ __stream, size_t __n, const char * __restrict__ __format, ...)
        -:  957:{
        -:  958:  int __retval;
        -:  959:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
        -:  960:  if (__builtin_constant_p(__n) && __n == 0)
        -:  961:    __retval = _vscprintf(__format, __local_argv);
        -:  962:  else
        -:  963:    __retval = __ms_vsnprintf (__stream, __n, __format, __local_argv);
        -:  964:  __builtin_va_end( __local_argv );
        -:  965:  return __retval;
        -:  966:}
        -:  967:
        -:  968:#endif /* !__MINGW_FORTIFY_VA_ARG */
        -:  969:#endif /* !__NO_ISOCEXT */
        -:  970:
        -:  971:#if __MINGW_FORTIFY_VA_ARG
        -:  972:
        -:  973:int __cdecl __mingw_call_ms_sprintf(char * __restrict__, const char * __restrict__, ...) __MINGW_ASM_CALL(sprintf);
        -:  974:
        -:  975:__mingw_bos_extern_ovr
        -:  976:__attribute__((__format__ (ms_printf, 2, 3))) __MINGW_ATTRIB_NONNULL(2)
        -:  977:int sprintf (char * __restrict__ __stream, const char * __restrict__ __format, ...)
        -:  978:{
        -:  979:  if (__mingw_bos_known(__stream)) {
        -:  980:    int __retval = __ms_snprintf( __stream, __mingw_bos(__stream, 1), __format, __builtin_va_arg_pack() );
        -:  981:    if (__retval >= 0)
        -:  982:      __mingw_bos_ptr_chk(__stream, (size_t)__retval + 1, 1);
        -:  983:    return __retval;
        -:  984:  }
        -:  985:  return __mingw_call_ms_sprintf( __stream, __format, __builtin_va_arg_pack() );
        -:  986:}
        -:  987:
        -:  988:#endif /* __MINGW_FORTIFY_VA_ARG */
        -:  989:
        -:  990:#if __MINGW_FORTIFY_LEVEL > 0
        -:  991:
        -:  992:int __cdecl __mingw_call_ms_vsprintf(char * __restrict__, const char * __restrict__, va_list) __MINGW_ASM_CALL(vsprintf);
        -:  993:
        -:  994:__mingw_bos_extern_ovr
        -:  995:__attribute__((__format__ (ms_printf, 2, 0))) __MINGW_ATTRIB_NONNULL(2)
        -:  996:int vsprintf (char * __restrict__ __stream, const char * __restrict__ __format, va_list __local_argv)
        -:  997:{
        -:  998:  if (__mingw_bos_known(__stream)) {
        -:  999:    int __retval = __ms_vsnprintf( __stream, __mingw_bos(__stream, 1), __format, __local_argv );
        -: 1000:    if (__retval >= 0)
        -: 1001:      __mingw_bos_ptr_chk(__stream, (size_t)__retval + 1, 1);
        -: 1002:    return __retval;
        -: 1003:  }
        -: 1004:  return __mingw_call_ms_vsprintf( __stream, __format, __local_argv );
        -: 1005:}
        -: 1006:
        -: 1007:#endif /* __MINGW_FORTIFY_LEVEL > 0 */
        -: 1008:
        -: 1009:#ifdef __GNUC__
        -: 1010:#pragma GCC diagnostic pop
        -: 1011:#endif
        -: 1012:#endif /* _UCRT */
        -: 1013:#endif /* __USE_MINGW_ANSI_STDIO */
        -: 1014:
        -: 1015:  _CRTIMP int __cdecl _set_printf_count_output(int _Value);
        -: 1016:  _CRTIMP int __cdecl _get_printf_count_output(void);
        -: 1017:
        -: 1018:#ifndef _WSTDIO_DEFINED
        -: 1019:#define _WSTDIO_DEFINED
        -: 1020:
        -: 1021:/* __attribute__((__format__ (gnu_wscanf, 2, 3))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1022:  int __cdecl __mingw_swscanf(const wchar_t * __restrict__ _Src,const wchar_t * __restrict__ _Format,...);
        -: 1023:/* __attribute__((__format__ (gnu_wscanf, 2, 0))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1024:  int __cdecl __mingw_vswscanf (const wchar_t * __restrict__ _Str,const wchar_t * __restrict__ Format,va_list argp);
        -: 1025:/* __attribute__((__format__ (gnu_wscanf, 1, 2))) */ __MINGW_ATTRIB_NONNULL(1)
        -: 1026:  int __cdecl __mingw_wscanf(const wchar_t * __restrict__ _Format,...);
        -: 1027:/* __attribute__((__format__ (gnu_wscanf, 1, 0))) */ __MINGW_ATTRIB_NONNULL(1)
        -: 1028:  int __cdecl __mingw_vwscanf(const wchar_t * __restrict__ Format, va_list argp);
        -: 1029:/* __attribute__((__format__ (gnu_wscanf, 2, 3))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1030:  int __cdecl __mingw_fwscanf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,...);
        -: 1031:/* __attribute__((__format__ (gnu_wscanf, 2, 0))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1032:  int __cdecl __mingw_vfwscanf (FILE * __restrict__ fp, const wchar_t * __restrict__ Format,va_list argp);
        -: 1033:
        -: 1034:/* __attribute__((__format__ (gnu_wprintf, 2, 3))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1035:  int __cdecl __mingw_fwprintf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,...);
        -: 1036:/* __attribute__((__format__ (gnu_wprintf, 1, 2))) */ __MINGW_ATTRIB_NONNULL(1)
        -: 1037:  int __cdecl __mingw_wprintf(const wchar_t * __restrict__ _Format,...);
        -: 1038:/* __attribute__((__format__ (gnu_wprintf, 2, 0))) */__MINGW_ATTRIB_NONNULL(2)
        -: 1039:  int __cdecl __mingw_vfwprintf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,va_list _ArgList);
        -: 1040:/*__attribute__((__format__ (gnu_wprintf, 1, 0))) */ __MINGW_ATTRIB_NONNULL(1)
        -: 1041:  int __cdecl __mingw_vwprintf(const wchar_t * __restrict__ _Format,va_list _ArgList);
        -: 1042:/* __attribute__((__format__ (gnu_wprintf, 3, 4))) */ __MINGW_ATTRIB_NONNULL(3)
        -: 1043:  int __cdecl __mingw_snwprintf (wchar_t * __restrict__ s, size_t n, const wchar_t * __restrict__ format, ...);
        -: 1044:/* __attribute__((__format__ (gnu_wprintf, 3, 0))) */ __MINGW_ATTRIB_NONNULL(3)
        -: 1045:  int __cdecl __mingw_vsnwprintf (wchar_t * __restrict__ , size_t, const wchar_t * __restrict__ , va_list);
        -: 1046:/* __attribute__((__format__ (gnu_wprintf, 2, 3))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1047:  int __cdecl __mingw_swprintf(wchar_t * __restrict__ , const wchar_t * __restrict__ , ...);
        -: 1048:/* __attribute__((__format__ (gnu_wprintf, 2, 0))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1049:  int __cdecl __mingw_vswprintf(wchar_t * __restrict__ , const wchar_t * __restrict__ ,va_list);
        -: 1050:
        -: 1051:/* __attribute__((__format__ (ms_wscanf, 2, 3))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1052:  int __cdecl __ms_swscanf(const wchar_t * __restrict__ _Src,const wchar_t * __restrict__ _Format,...);
        -: 1053:/* __attribute__((__format__ (ms_wscanf, 1, 2))) */ __MINGW_ATTRIB_NONNULL(1)
        -: 1054:  int __cdecl __ms_wscanf(const wchar_t * __restrict__ _Format,...);
        -: 1055:/* __attribute__((__format__ (ms_wscanf, 2, 3))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1056:  int __cdecl __ms_fwscanf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,...);
        -: 1057:
        -: 1058:/* __attribute__((__format__ (ms_wprintf, 2, 3))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1059:  int __cdecl __ms_fwprintf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,...);
        -: 1060:/* __attribute__((__format__ (ms_wprintf, 1, 2))) */ __MINGW_ATTRIB_NONNULL(1)
        -: 1061:  int __cdecl __ms_wprintf(const wchar_t * __restrict__ _Format,...);
        -: 1062:/* __attribute__((__format__ (ms_wprintf, 2, 0))) */__MINGW_ATTRIB_NONNULL(2)
        -: 1063:  int __cdecl __ms_vfwprintf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,va_list _ArgList);
        -: 1064:/*__attribute__((__format__ (ms_wprintf, 1, 0))) */ __MINGW_ATTRIB_NONNULL(1)
        -: 1065:  int __cdecl __ms_vwprintf(const wchar_t * __restrict__ _Format,va_list _ArgList);
        -: 1066:/* __attribute__((__format__ (ms_wprintf, 2, 3))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1067:  int __cdecl __ms_swprintf(wchar_t * __restrict__ , const wchar_t * __restrict__ , ...);
        -: 1068:/* __attribute__((__format__ (ms_wprintf, 2, 0))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1069:  int __cdecl __ms_vswprintf(wchar_t * __restrict__ , const wchar_t * __restrict__ ,va_list);
        -: 1070:
        -: 1071:#ifdef _UCRT
        -: 1072:  int __cdecl __stdio_common_vswprintf(unsigned __int64 options, wchar_t *str, size_t len, const wchar_t *format, _locale_t locale, va_list valist);
        -: 1073:  int __cdecl __stdio_common_vfwprintf(unsigned __int64 options, FILE *file, const wchar_t *format, _locale_t locale, va_list valist);
        -: 1074:  int __cdecl __stdio_common_vswscanf(unsigned __int64 options, const wchar_t *input, size_t length, const wchar_t *format, _locale_t locale, va_list valist);
        -: 1075:  int __cdecl __stdio_common_vfwscanf(unsigned __int64 options, FILE *file, const wchar_t *format, _locale_t locale, va_list valist);
        -: 1076:#endif
        -: 1077:
        -: 1078:#if __USE_MINGW_ANSI_STDIO && !defined(_CRTBLD)
        -: 1079:/*
        -: 1080: * User has expressed a preference for C99 conformance...
        -: 1081: */
        -: 1082:
        -: 1083:__mingw_ovr
        -: 1084:/* __attribute__((__format__ (gnu_wscanf, 2, 3))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1085:int swscanf(const wchar_t *__source, const wchar_t *__format, ...)
        -: 1086:{
        -: 1087:  int __retval;
        -: 1088:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
        -: 1089:  __retval = __mingw_vswscanf( __source, __format, __local_argv );
        -: 1090:  __builtin_va_end( __local_argv );
        -: 1091:  return __retval;
        -: 1092:}
        -: 1093:
        -: 1094:__mingw_ovr
        -: 1095:/* __attribute__((__format__ (gnu_wscanf, 1, 2))) */ __MINGW_ATTRIB_NONNULL(1)
        -: 1096:int wscanf(const wchar_t *__format, ...)
        -: 1097:{
        -: 1098:  int __retval;
        -: 1099:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
        -: 1100:  __retval = __mingw_vfwscanf( stdin, __format, __local_argv );
        -: 1101:  __builtin_va_end( __local_argv );
        -: 1102:  return __retval;
        -: 1103:}
        -: 1104:
        -: 1105:__mingw_ovr
        -: 1106:/* __attribute__((__format__ (gnu_wscanf, 2, 3))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1107:int fwscanf(FILE *__stream, const wchar_t *__format, ...)
        -: 1108:{
        -: 1109:  int __retval;
        -: 1110:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
        -: 1111:  __retval = __mingw_vfwscanf( __stream, __format, __local_argv );
        -: 1112:  __builtin_va_end( __local_argv );
        -: 1113:  return __retval;
        -: 1114:}
        -: 1115:
        -: 1116:#ifndef __NO_ISOCEXT  /* externs in libmingwex.a */
        -: 1117:__mingw_ovr
        -: 1118:/* __attribute__((__format__ (gnu_wscanf, 2, 0))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1119:int vswscanf (const wchar_t * __restrict__ __source, const wchar_t * __restrict__ __format, __builtin_va_list __local_argv)
        -: 1120:{
        -: 1121:  return __mingw_vswscanf( __source, __format, __local_argv );
        -: 1122:}
        -: 1123:
        -: 1124:__mingw_ovr
        -: 1125:/* __attribute__((__format__ (gnu_wscanf, 1, 0))) */ __MINGW_ATTRIB_NONNULL(1)
        -: 1126:int vwscanf(const wchar_t *__format,  __builtin_va_list __local_argv)
        -: 1127:{
        -: 1128:  return __mingw_vfwscanf( stdin, __format, __local_argv );
        -: 1129:}
        -: 1130:
        -: 1131:__mingw_ovr
        -: 1132:/* __attribute__((__format__ (gnu_wscanf, 2, 0))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1133:int vfwscanf (FILE *__stream,  const wchar_t *__format, __builtin_va_list __local_argv)
        -: 1134:{
        -: 1135:  return __mingw_vfwscanf( __stream, __format, __local_argv );
        -: 1136:}
        -: 1137:#endif /* __NO_ISOCEXT */
        -: 1138:
        -: 1139:
        -: 1140:
        -: 1141:__mingw_ovr
        -: 1142:/* __attribute__((__format__ (gnu_wprintf, 2, 3))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1143:int fwprintf (FILE *__stream, const wchar_t *__format, ...)
        -: 1144:{
        -: 1145:  int __retval;
        -: 1146:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
        -: 1147:  __retval = __mingw_vfwprintf( __stream, __format, __local_argv );
        -: 1148:  __builtin_va_end( __local_argv );
        -: 1149:  return __retval;
        -: 1150:}
        -: 1151:
        -: 1152:__mingw_ovr
        -: 1153:/* __attribute__((__format__ (gnu_wprintf, 1, 2))) */ __MINGW_ATTRIB_NONNULL(1)
        -: 1154:int wprintf (const wchar_t *__format, ...)
        -: 1155:{
        -: 1156:  int __retval;
        -: 1157:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
        -: 1158:  __retval = __mingw_vfwprintf( stdout, __format, __local_argv );
        -: 1159:  __builtin_va_end( __local_argv );
        -: 1160:  return __retval;
        -: 1161:}
        -: 1162:
        -: 1163:__mingw_ovr
        -: 1164:/* __attribute__((__format__ (gnu_wprintf, 2, 0))) */ __MINGW_ATTRIB_NONNULL(2)
        -: 1165:int vfwprintf (FILE *__stream, const wchar_t *__format, __builtin_va_list __local_argv)
        -: 1166:{
        -: 1167:  return __mingw_vfwprintf( __stream, __format, __local_argv );
        -: 1168:}
        -: 1169:
        -: 1170:__mingw_ovr
        -: 1171:/* __attribute__((__format__ (gnu_wprintf, 1, 0))) */ __MINGW_ATTRIB_NONNULL(1)
        -: 1172:int vwprintf (const wchar_t *__format, __builtin_va_list __local_argv)
        -: 1173:{
        -: 1174:  return __mingw_vfwprintf( stdout, __format, __local_argv );
        -: 1175:}
        -: 1176:
        -: 1177:#ifndef __NO_ISOCEXT  /* externs in libmingwex.a */
        -: 1178:
        -: 1179:#if __MINGW_FORTIFY_VA_ARG
        -: 1180:
        -: 1181:int snwprintf (wchar_t *__stream, size_t __n, const wchar_t *__format, ...) __MINGW_ASM_CALL(__mingw_snwprintf);
        -: 1182:
        -: 1183:__mingw_bos_extern_ovr
        -: 1184:/* __attribute__((__format__ (gnu_wprintf, 3, 4))) */ __MINGW_ATTRIB_NONNULL(3)
        -: 1185:int snwprintf (wchar_t *__stream, size_t __n, const wchar_t *__format, ...)
        -: 1186:{
        -: 1187:  __mingw_bos_ptr_chk_warn(__stream, __n * sizeof(wchar_t), 1);
        -: 1188:  return __mingw_snwprintf( __stream, __n, __format, __builtin_va_arg_pack() );
        -: 1189:}
        -: 1190:
        -: 1191:#else /* !__MINGW_FORTIFY_VA_ARG */
        -: 1192:
        -: 1193:__mingw_ovr
        -: 1194:/* __attribute__((__format__ (gnu_wprintf, 3, 4))) */ __MINGW_ATTRIB_NONNULL(3)
        -: 1195:int snwprintf (wchar_t *__stream, size_t __n, const wchar_t *__format, ...)
        -: 1196:{
        -: 1197:  int __retval;
        -: 1198:  __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
        -: 1199:  __retval = __mingw_vsnwprintf( __stream, __n, __format, __local_argv );
        -: 1200:  __builtin_va_end( __local_argv );
        -: 1201:  return __retval;
        -: 1202:}
        -: 1203:
        -: 1204:#endif /* __MINGW_FORTIFY_VA_ARG */
        -: 1205:
        -: 1206:__mingw_bos_ovr
        -: 1207:/* __attribute__((__format__ (gnu_wprintf, 3, 0))) */ __MINGW_ATTRIB_NONNULL(3)
        -: 1208:int vsnwprintf (wchar_t *__stream, size_t __n, const wchar_t *__format, __builtin_va_list __local_argv)
        -: 1209:{
        -: 1210:#if __MINGW_FORTIFY_LEVEL > 0
        -: 1211:  __mingw_bos_ptr_chk_warn(__stream, __n * sizeof(wchar_t), 1);
        -: 1212:#endif
        -: 1213:  return __mingw_vsnwprintf( __stream, __n, __format, __local_argv );
        -: 1214:}
        -: 1215:#endif /* __NO_ISOCEXT */
        -: 1216:
        -: 1217:#else /* !__USE_MINGW_ANSI_STDIO */
        -: 1218:
        -: 1219:#ifdef _UCRT
        -: 1220:  __mingw_ovr __MINGW_ATTRIB_DEPRECATED_SEC_WARN
        -: 1221:  int __cdecl fwscanf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,...)
        -: 1222:  {
        -: 1223:    __builtin_va_list __ap;
        -: 1224:    int __ret;
        -: 1225:    __builtin_va_start(__ap, _Format);
        -: 1226:    __ret = __stdio_common_vfwscanf(_CRT_INTERNAL_LOCAL_SCANF_OPTIONS, _File, _Format, NULL, __ap);
        -: 1227:    __builtin_va_end(__ap);
        -: 1228:    return __ret;
        -: 1229:  }
        -: 1230:  __mingw_ovr __MINGW_ATTRIB_DEPRECATED_SEC_WARN
        -: 1231:  int __cdecl swscanf(const wchar_t * __restrict__ _Src,const wchar_t * __restrict__ _Format,...)
        -: 1232:  {
        -: 1233:    __builtin_va_list __ap;
        -: 1234:    int __ret;
        -: 1235:    __builtin_va_start(__ap, _Format);
        -: 1236:    __ret = __stdio_common_vswscanf(_CRT_INTERNAL_LOCAL_SCANF_OPTIONS, _Src, (size_t)-1, _Format, NULL, __ap);
        -: 1237:    __builtin_va_end(__ap);
        -: 1238:    return __ret;
        -: 1239:  }
        -: 1240:  __mingw_ovr __MINGW_ATTRIB_DEPRECATED_SEC_WARN
        -: 1241:  int __cdecl wscanf(const wchar_t * __restrict__ _Format,...)
        -: 1242:  {
        -: 1243:    __builtin_va_list __ap;
        -: 1244:    int __ret;
        -: 1245:    __builtin_va_start(__ap, _Format);
        -: 1246:    __ret = __stdio_common_vfwscanf(_CRT_INTERNAL_LOCAL_SCANF_OPTIONS, stdin, _Format, NULL, __ap);
        -: 1247:    __builtin_va_end(__ap);
        -: 1248:    return __ret;
        -: 1249:  }
        -: 1250:  __mingw_ovr
        -: 1251:  __MINGW_ATTRIB_NONNULL(2)
        -: 1252:  int vfwscanf (FILE *__stream,  const wchar_t *__format, va_list __local_argv)
        -: 1253:  {
        -: 1254:    return __stdio_common_vfwscanf(_CRT_INTERNAL_LOCAL_SCANF_OPTIONS, __stream, __format, NULL, __local_argv);
        -: 1255:  }
        -: 1256:
        -: 1257:  __mingw_ovr
        -: 1258:  __MINGW_ATTRIB_NONNULL(2)
        -: 1259:  int vswscanf (const wchar_t * __restrict__ __source, const wchar_t * __restrict__ __format, va_list __local_argv)
        -: 1260:  {
        -: 1261:    return __stdio_common_vswscanf(_CRT_INTERNAL_LOCAL_SCANF_OPTIONS, __source, (size_t)-1, __format, NULL, __local_argv);
        -: 1262:  }
        -: 1263:  __mingw_ovr
        -: 1264:  __MINGW_ATTRIB_NONNULL(1)
        -: 1265:  int vwscanf(const wchar_t *__format, va_list __local_argv)
        -: 1266:  {
        -: 1267:    return __stdio_common_vfwscanf(_CRT_INTERNAL_LOCAL_SCANF_OPTIONS, stdin, __format, NULL, __local_argv);
        -: 1268:  }
        -: 1269:
        -: 1270:  __mingw_static_ovr
        -: 1271:  int __cdecl fwprintf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,...)
        -: 1272:  {
        -: 1273:    __builtin_va_list __ap;
        -: 1274:    int __ret;
        -: 1275:    __builtin_va_start(__ap, _Format);
        -: 1276:    __ret = __stdio_common_vfwprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _File, _Format, NULL, __ap);
        -: 1277:    __builtin_va_end(__ap);
        -: 1278:    return __ret;
        -: 1279:  }
        -: 1280:  __mingw_ovr
        -: 1281:  int __cdecl wprintf(const wchar_t * __restrict__ _Format,...)
        -: 1282:  {
        -: 1283:    __builtin_va_list __ap;
        -: 1284:    int __ret;
        -: 1285:    __builtin_va_start(__ap, _Format);
        -: 1286:    __ret = __stdio_common_vfwprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, stdout, _Format, NULL, __ap);
        -: 1287:    __builtin_va_end(__ap);
        -: 1288:    return __ret;
        -: 1289:  }
        -: 1290:  __mingw_ovr
        -: 1291:  int __cdecl vfwprintf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,va_list _ArgList)
        -: 1292:  {
        -: 1293:    return __stdio_common_vfwprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _File, _Format, NULL, _ArgList);
        -: 1294:  }
        -: 1295:  __mingw_ovr
        -: 1296:  int __cdecl vwprintf(const wchar_t * __restrict__ _Format,va_list _ArgList)
        -: 1297:  {
        -: 1298:    return __stdio_common_vfwprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, stdout, _Format, NULL, _ArgList);
        -: 1299:  }
        -: 1300:#else
        -: 1301:
        -: 1302:  int __cdecl fwscanf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,...) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -: 1303:  int __cdecl swscanf(const wchar_t * __restrict__ _Src,const wchar_t * __restrict__ _Format,...) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -: 1304:  int __cdecl wscanf(const wchar_t * __restrict__ _Format,...) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -: 1305:#ifndef __NO_ISOCEXT  /* externs in libmingwex.a */
        -: 1306:  int __cdecl __ms_vwscanf (const wchar_t * __restrict__ , va_list);
        -: 1307:  int __cdecl __ms_vfwscanf (FILE * __restrict__ ,const wchar_t * __restrict__ ,va_list);
        -: 1308:  int __cdecl __ms_vswscanf (const wchar_t * __restrict__ ,const wchar_t * __restrict__ ,va_list);
        -: 1309:
        -: 1310:  __mingw_ovr
        -: 1311:  __MINGW_ATTRIB_NONNULL(2)
        -: 1312:  int vfwscanf (FILE *__stream,  const wchar_t *__format, __builtin_va_list __local_argv)
        -: 1313:  {
        -: 1314:    return __ms_vfwscanf (__stream, __format, __local_argv);
        -: 1315:  }
        -: 1316:
        -: 1317:  __mingw_ovr
        -: 1318:  __MINGW_ATTRIB_NONNULL(2)
        -: 1319:  int vswscanf (const wchar_t * __restrict__ __source, const wchar_t * __restrict__ __format, __builtin_va_list __local_argv)
        -: 1320:  {
        -: 1321:    return __ms_vswscanf( __source, __format, __local_argv );
        -: 1322:  }
        -: 1323:  __mingw_ovr
        -: 1324:  __MINGW_ATTRIB_NONNULL(1)
        -: 1325:  int vwscanf(const wchar_t *__format,  __builtin_va_list __local_argv)
        -: 1326:  {
        -: 1327:    return __ms_vwscanf (__format, __local_argv);
        -: 1328:  }
        -: 1329:
        -: 1330:#endif /* __NO_ISOCEXT */
        -: 1331:
        -: 1332:  int __cdecl fwprintf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,...);
        -: 1333:  int __cdecl wprintf(const wchar_t * __restrict__ _Format,...);
        -: 1334:  int __cdecl vfwprintf(FILE * __restrict__ _File,const wchar_t * __restrict__ _Format,va_list _ArgList);
        -: 1335:  int __cdecl vwprintf(const wchar_t * __restrict__ _Format,va_list _ArgList);
        -: 1336:#endif /* _UCRT */
        -: 1337:#endif /* __USE_MINGW_ANSI_STDIO */
        -: 1338:
        -: 1339:#ifndef WEOF
        -: 1340:#define WEOF (wint_t)(0xFFFF)
        -: 1341:#endif
        -: 1342:
        -: 1343:#ifdef _POSIX_
        -: 1344:  _CRTIMP FILE *__cdecl _wfsopen(const wchar_t *_Filename,const wchar_t *_Mode);
        -: 1345:#else
        -: 1346:  _CRTIMP FILE *__cdecl _wfsopen(const wchar_t *_Filename,const wchar_t *_Mode,int _ShFlag);
        -: 1347:#endif
        -: 1348:
        -: 1349:  wint_t __cdecl fgetwc(FILE *_File);
        -: 1350:  _CRTIMP wint_t __cdecl _fgetwchar(void);
        -: 1351:  wint_t __cdecl fputwc(wchar_t _Ch,FILE *_File);
        -: 1352:  _CRTIMP wint_t __cdecl _fputwchar(wchar_t _Ch);
        -: 1353:  wint_t __cdecl getwc(FILE *_File);
        -: 1354:  wint_t __cdecl getwchar(void);
        -: 1355:  wint_t __cdecl putwc(wchar_t _Ch,FILE *_File);
        -: 1356:  wint_t __cdecl putwchar(wchar_t _Ch);
        -: 1357:  wint_t __cdecl ungetwc(wint_t _Ch,FILE *_File);
        -: 1358:  wchar_t *__cdecl fgetws(wchar_t * __restrict__ _Dst,int _SizeInWords,FILE * __restrict__ _File);
        -: 1359:  int __cdecl fputws(const wchar_t * __restrict__ _Str,FILE * __restrict__ _File);
        -: 1360:  _CRTIMP wchar_t *__cdecl _getws(wchar_t *_String) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -: 1361:  _CRTIMP int __cdecl _putws(const wchar_t *_Str);
        -: 1362:
        -: 1363:#ifdef _UCRT
        -: 1364:  __mingw_ovr
        -: 1365:  int __cdecl _scwprintf(const wchar_t * __restrict__ _Format,...)
        -: 1366:  {
        -: 1367:    __builtin_va_list __ap;
        -: 1368:    int __ret;
        -: 1369:    __builtin_va_start(__ap, _Format);
        -: 1370:    __ret = __stdio_common_vswprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR, NULL, 0, _Format, NULL, __ap);
        -: 1371:    __builtin_va_end(__ap);
        -: 1372:    return __ret;
        -: 1373:  }
        -: 1374:  __mingw_static_ovr __MINGW_ATTRIB_DEPRECATED_SEC_WARN
        -: 1375:  int __cdecl _snwprintf(wchar_t * __restrict__ _Dest,size_t _Count,const wchar_t * __restrict__ _Format,...)
        -: 1376:  {
        -: 1377:    __builtin_va_list __ap;
        -: 1378:    int __ret;
        -: 1379:    __builtin_va_start(__ap, _Format);
        -: 1380:    __ret = __stdio_common_vswprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION, _Dest, _Count, _Format, NULL, __ap);
        -: 1381:    __builtin_va_end(__ap);
        -: 1382:    return __ret;
        -: 1383:  }
        -: 1384:  int __cdecl _vsnwprintf(wchar_t * __restrict__ _Dest,size_t _Count,const wchar_t * __restrict__ _Format,va_list _Args) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -: 1385:
        -: 1386:#if __USE_MINGW_ANSI_STDIO == 0
        -: 1387:  __mingw_ovr
        -: 1388:  int snwprintf (wchar_t * __restrict__ s, size_t n, const wchar_t * __restrict__ format, ...)
        -: 1389:  {
        -: 1390:    __builtin_va_list __ap;
        -: 1391:    int __ret;
        -: 1392:    __builtin_va_start(__ap, format);
        -: 1393:    __ret = __stdio_common_vswprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR, s, n, format, NULL, __ap);
        -: 1394:    __builtin_va_end(__ap);
        -: 1395:    return __ret;
        -: 1396:  }
        -: 1397:  __mingw_ovr
        -: 1398:  int __cdecl vsnwprintf (wchar_t * __restrict__ s, size_t n, const wchar_t * __restrict__ format, va_list arg)
        -: 1399:  {
        -: 1400:    int __ret = __stdio_common_vswprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, s, n, format, NULL, arg);
        -: 1401:    return __ret < 0 ? -1 : __ret;
        -: 1402:  }
        -: 1403:#endif
        -: 1404:
        -: 1405:  __mingw_ovr
        -: 1406:  int __cdecl _swprintf(wchar_t * __restrict__ _Dest,const wchar_t * __restrict__ _Format,...)
        -: 1407:  {
        -: 1408:    __builtin_va_list __ap;
        -: 1409:    int __ret;
        -: 1410:    __builtin_va_start(__ap, _Format);
        -: 1411:    __ret = __stdio_common_vswprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Dest, (size_t)-1, _Format, NULL, __ap);
        -: 1412:    __builtin_va_end(__ap);
        -: 1413:    return __ret;
        -: 1414:  }
        -: 1415:  __mingw_ovr
        -: 1416:  int __cdecl _vswprintf(wchar_t * __restrict__ _Dest,const wchar_t * __restrict__ _Format,va_list _Args)
        -: 1417:  {
        -: 1418:    return __stdio_common_vswprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Dest, (size_t)-1, _Format, NULL, _Args);
        -: 1419:  }
        -: 1420:
        -: 1421:  __mingw_ovr
        -: 1422:  int __cdecl _vscwprintf(const wchar_t * __restrict__ _Format, va_list _ArgList)
        -: 1423:  {
        -: 1424:      int _Result = __stdio_common_vswprintf(_CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR, NULL, 0, _Format, NULL, _ArgList);
        -: 1425:      return _Result < 0 ? -1 : _Result;
        -: 1426:  }
        -: 1427:#else
        -: 1428:  _CRTIMP int __cdecl _scwprintf(const wchar_t * __restrict__ _Format,...);
        -: 1429:  _CRTIMP int __cdecl _swprintf_c(wchar_t * __restrict__ _DstBuf,size_t _SizeInWords,const wchar_t * __restrict__ _Format,...);
        -: 1430:  _CRTIMP int __cdecl _vswprintf_c(wchar_t * __restrict__ _DstBuf,size_t _SizeInWords,const wchar_t * __restrict__ _Format,va_list _ArgList);
        -: 1431:  _CRTIMP int __cdecl _snwprintf(wchar_t * __restrict__ _Dest,size_t _Count,const wchar_t * __restrict__ _Format,...) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -: 1432:  _CRTIMP int __cdecl _vsnwprintf(wchar_t * __restrict__ _Dest,size_t _Count,const wchar_t * __restrict__ _Format,va_list _Args) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -: 1433:  _CRTIMP int __cdecl _vscwprintf(const wchar_t * __restrict__ _Format,va_list _ArgList);
        -: 1434:
        -: 1435:#ifndef __NO_ISOCEXT  /* externs in libmingwex.a */
        -: 1436:
        -: 1437:#if __USE_MINGW_ANSI_STDIO == 0
        -: 1438:  int __cdecl __ms_snwprintf (wchar_t * __restrict__ s, size_t n, const wchar_t * __restrict__ format, ...);
        -: 1439:  int __cdecl __ms_vsnwprintf (wchar_t * __restrict__ , size_t, const wchar_t * __restrict__ , va_list);
        -: 1440:  __mingw_ovr
        -: 1441:  int snwprintf (wchar_t * __restrict__ s, size_t n, const wchar_t * __restrict__ format, ...)
        -: 1442:  {
        -: 1443:    int r;
        -: 1444:    va_list argp;
        -: 1445:    __builtin_va_start (argp, format);
        -: 1446:    r = _vsnwprintf (s, n, format, argp);
        -: 1447:    __builtin_va_end (argp);
        -: 1448:    return r;
        -: 1449:  }
        -: 1450:  __mingw_ovr
        -: 1451:  int __cdecl vsnwprintf (wchar_t * __restrict__ s, size_t n, const wchar_t * __restrict__ format, va_list arg)
        -: 1452:  {
        -: 1453:    return _vsnwprintf(s,n,format,arg);
        -: 1454:  }
        -: 1455:#endif
        -: 1456:
        -: 1457:#endif /* ! __NO_ISOCEXT */
        -: 1458:  _CRTIMP int __cdecl _swprintf(wchar_t * __restrict__ _Dest,const wchar_t * __restrict__ _Format,...);
        -: 1459:  _CRTIMP int __cdecl _vswprintf(wchar_t * __restrict__ _Dest,const wchar_t * __restrict__ _Format,va_list _Args);
        -: 1460:#endif /* _UCRT */
        -: 1461:
        -: 1462:#ifndef RC_INVOKED
        -: 1463:#include <swprintf.inl>
        -: 1464:#endif
        -: 1465:
        -: 1466:#ifdef _CRT_NON_CONFORMING_SWPRINTFS
        -: 1467:#ifndef __cplusplus
        -: 1468:#define _swprintf_l __swprintf_l
        -: 1469:#define _vswprintf_l __vswprintf_l
        -: 1470:#endif
        -: 1471:#endif
        -: 1472:
        -: 1473:  _CRTIMP wchar_t *__cdecl _wtempnam(const wchar_t *_Directory,const wchar_t *_FilePrefix);
        -: 1474:  _CRTIMP int __cdecl _snwscanf(const wchar_t * __restrict__ _Src,size_t _MaxCount,const wchar_t * __restrict__ _Format,...);
        -: 1475:  _CRTIMP FILE *__cdecl _wfdopen(int _FileHandle ,const wchar_t *_Mode);
        -: 1476:  _CRTIMP FILE *__cdecl _wfopen(const wchar_t * __restrict__ _Filename,const wchar_t *__restrict__  _Mode) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -: 1477:  _CRTIMP FILE *__cdecl _wfreopen(const wchar_t * __restrict__ _Filename,const wchar_t * __restrict__ _Mode,FILE * __restrict__ _OldFile) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
        -: 1478:
        -: 1479:#ifndef _CRT_WPERROR_DEFINED
        -: 1480:#define _CRT_WPERROR_DEFINED
        -: 1481:  _CRTIMP void __cdecl _wperror(const wchar_t *_ErrMsg);
        -: 1482:#endif
        -: 1483:  _CRTIMP FILE *__cdecl _wpopen(const wchar_t *_Command,const wchar_t *_Mode);
        -: 1484:#if !defined(NO_OLDNAMES) && !defined(wpopen)
        -: 1485:#define wpopen	_wpopen
        -: 1486:#endif
        -: 1487:
        -: 1488:  _CRTIMP int __cdecl _wremove(const wchar_t *_Filename);
        -: 1489:  _CRTIMP wchar_t *__cdecl _wtmpnam(wchar_t *_Buffer);
        -: 1490:#if __MSVCRT_VERSION__ >= 0x800
        -: 1491:  _CRTIMP wint_t __cdecl _fgetwc_nolock(FILE *_File);
        -: 1492:  _CRTIMP wint_t __cdecl _fputwc_nolock(wchar_t _Ch,FILE *_File);
        -: 1493:  _CRTIMP wint_t __cdecl _ungetwc_nolock(wint_t _Ch,FILE *_File);
        -: 1494:#endif
        -: 1495:
        -: 1496:#undef _CRT_GETPUTWCHAR_NOINLINE
        -: 1497:
        -: 1498:#if !defined(__cplusplus) || defined(_CRT_GETPUTWCHAR_NOINLINE) || defined (__CRT__NO_INLINE)
        -: 1499:#define getwchar() fgetwc(stdin)
        -: 1500:#define putwchar(_c) fputwc((_c),stdout)
        -: 1501:#else
        -: 1502:  __CRT_INLINE wint_t __cdecl getwchar() {return (fgetwc(stdin)); }
        -: 1503:  __CRT_INLINE wint_t __cdecl putwchar(wchar_t _C) {return (fputwc(_C,stdout)); }
        -: 1504:#endif
        -: 1505:
        -: 1506:#define getwc(_stm) fgetwc(_stm)
        -: 1507:#define putwc(_c,_stm) fputwc(_c,_stm)
        -: 1508:#if __MSVCRT_VERSION__ >= 0x800
        -: 1509:#define _putwc_nolock(_c,_stm) _fputwc_nolock(_c,_stm)
        -: 1510:#define _getwc_nolock(_c) _fgetwc_nolock(_c)
        -: 1511:#endif
        -: 1512:#endif
        -: 1513:
        -: 1514:#define _STDIO_DEFINED
        -: 1515:#endif
        -: 1516:
        -: 1517:#ifdef _UCRT
        -: 1518:  _CRTIMP int __cdecl _fgetc_nolock(FILE *_File);
        -: 1519:  _CRTIMP int __cdecl _fputc_nolock(int _Char, FILE *_File);
        -: 1520:  _CRTIMP int __cdecl _getc_nolock(FILE *_File);
        -: 1521:  _CRTIMP int __cdecl _putc_nolock(int _Char, FILE *_File);
        -: 1522:#else
        -: 1523:#define _fgetc_nolock(_stream) (--(_stream)->_cnt >= 0 ? 0xff & *(_stream)->_ptr++ : _filbuf(_stream))
        -: 1524:#define _fputc_nolock(_c,_stream) (--(_stream)->_cnt >= 0 ? 0xff & (*(_stream)->_ptr++ = (char)(_c)) : _flsbuf((_c),(_stream)))
        -: 1525:#define _getc_nolock(_stream) _fgetc_nolock(_stream)
        -: 1526:#define _putc_nolock(_c,_stream) _fputc_nolock(_c,_stream)
        -: 1527:#endif
        -: 1528:#define _getchar_nolock() _getc_nolock(stdin)
        -: 1529:#define _putchar_nolock(_c) _putc_nolock((_c),stdout)
        -: 1530:#define _getwchar_nolock() _getwc_nolock(stdin)
        -: 1531:#define _putwchar_nolock(_c) _putwc_nolock((_c),stdout)
        -: 1532:
        -: 1533:  _CRTIMP void __cdecl _lock_file(FILE *_File);
        -: 1534:  _CRTIMP void __cdecl _unlock_file(FILE *_File);
        -: 1535:#if __MSVCRT_VERSION__ >= 0x800
        -: 1536:  _CRTIMP int __cdecl _fclose_nolock(FILE *_File);
        -: 1537:  _CRTIMP int __cdecl _fflush_nolock(FILE *_File);
        -: 1538:  _CRTIMP size_t __cdecl _fread_nolock(void * __restrict__ _DstBuf,size_t _ElementSize,size_t _Count,FILE * __restrict__ _File);
        -: 1539:  _CRTIMP int __cdecl _fseek_nolock(FILE *_File,long _Offset,int _Origin);
        -: 1540:  _CRTIMP long __cdecl _ftell_nolock(FILE *_File);
        -: 1541:  __MINGW_EXTENSION _CRTIMP int __cdecl _fseeki64_nolock(FILE *_File,__int64 _Offset,int _Origin);
        -: 1542:  __MINGW_EXTENSION _CRTIMP __int64 __cdecl _ftelli64_nolock(FILE *_File);
        -: 1543:  _CRTIMP size_t __cdecl _fwrite_nolock(const void * __restrict__ _DstBuf,size_t _Size,size_t _Count,FILE * __restrict__ _File);
        -: 1544:  _CRTIMP int __cdecl _ungetc_nolock(int _Ch,FILE *_File);
        -: 1545:#endif
        -: 1546:
        -: 1547:#if !defined(NO_OLDNAMES) || !defined(_POSIX)
        -: 1548:#define P_tmpdir _P_tmpdir
        -: 1549:#define SYS_OPEN _SYS_OPEN
        -: 1550:
        -: 1551:  char *__cdecl tempnam(const char *_Directory,const char *_FilePrefix) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -: 1552:  int __cdecl fcloseall(void) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -: 1553:  FILE *__cdecl fdopen(int _FileHandle,const char *_Format) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -: 1554:  int __cdecl fgetchar(void) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -: 1555:  int __cdecl fileno(FILE *_File) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -: 1556:  int __cdecl flushall(void) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -: 1557:  int __cdecl fputchar(int _Ch) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -: 1558:  int __cdecl getw(FILE *_File) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -: 1559:  int __cdecl putw(int _Ch,FILE *_File) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -: 1560:  int __cdecl rmtmp(void) __MINGW_ATTRIB_DEPRECATED_MSVC2005;
        -: 1561:#endif
        -: 1562:
        -: 1563:#ifndef __MINGW_MBWC_CONVERT_DEFINED
        -: 1564:#define __MINGW_MBWC_CONVERT_DEFINED
        -: 1565:
        -: 1566:/**
        -: 1567: * __mingw_str_wide_utf8
        -: 1568: * Converts a null terminated UCS-2 string to a multibyte (UTF-8) equivalent.
        -: 1569: * Caller is supposed to free allocated buffer with __mingw_str_free().
        -: 1570: * @param[in] wptr Pointer to wide string.
        -: 1571: * @param[out] mbptr Pointer to multibyte string.
        -: 1572: * @param[out] buflen Optional parameter for length of allocated buffer.
        -: 1573: * @return Number of characters converted, 0 for failure.
        -: 1574: *
        -: 1575: * WideCharToMultiByte - http://msdn.microsoft.com/en-us/library/dd374130(VS.85).aspx
        -: 1576: */
        -: 1577:int __cdecl __mingw_str_wide_utf8 (const wchar_t * const wptr, char **mbptr, size_t * buflen);
        -: 1578:
        -: 1579:/**
        -: 1580: * __mingw_str_utf8_wide
        -: 1581: * Converts a null terminated UTF-8 string to a UCS-2 equivalent.
        -: 1582: * Caller is supposed to free allocated buffer with __mingw_str_free().
        -: 1583: * @param[out] mbptr Pointer to multibyte string.
        -: 1584: * @param[in] wptr Pointer to wide string.
        -: 1585: * @param[out] buflen Optional parameter for length of allocated buffer.
        -: 1586: * @return Number of characters converted, 0 for failure.
        -: 1587: *
        -: 1588: * MultiByteToWideChar - http://msdn.microsoft.com/en-us/library/dd319072(VS.85).aspx
        -: 1589: */
        -: 1590:
        -: 1591:int __cdecl __mingw_str_utf8_wide (const char *const mbptr, wchar_t ** wptr, size_t * buflen);
        -: 1592:
        -: 1593:/**
        -: 1594: * __mingw_str_free
        -: 1595: * Frees buffer create by __mingw_str_wide_utf8 and __mingw_str_utf8_wide.
        -: 1596: * @param[in] ptr memory block to free.
        -: 1597: *
        -: 1598: */
        -: 1599:
        -: 1600:void __cdecl __mingw_str_free(void *ptr);
        -: 1601:
        -: 1602:#endif /* __MINGW_MBWC_CONVERT_DEFINED */
        -: 1603:
        -: 1604:#ifdef _CRT_USE_WINAPI_FAMILY_DESKTOP_APP
        -: 1605:#ifndef _WSPAWN_DEFINED
        -: 1606:#define _WSPAWN_DEFINED
        -: 1607:  _CRTIMP intptr_t __cdecl _wspawnl(int _Mode,const wchar_t *_Filename,const wchar_t *_ArgList,...);
        -: 1608:  _CRTIMP intptr_t __cdecl _wspawnle(int _Mode,const wchar_t *_Filename,const wchar_t *_ArgList,...);
        -: 1609:  _CRTIMP intptr_t __cdecl _wspawnlp(int _Mode,const wchar_t *_Filename,const wchar_t *_ArgList,...);
        -: 1610:  _CRTIMP intptr_t __cdecl _wspawnlpe(int _Mode,const wchar_t *_Filename,const wchar_t *_ArgList,...);
        -: 1611:  _CRTIMP intptr_t __cdecl _wspawnv(int _Mode,const wchar_t *_Filename,const wchar_t *const *_ArgList);
        -: 1612:  _CRTIMP intptr_t __cdecl _wspawnve(int _Mode,const wchar_t *_Filename,const wchar_t *const *_ArgList,const wchar_t *const *_Env);
        -: 1613:  _CRTIMP intptr_t __cdecl _wspawnvp(int _Mode,const wchar_t *_Filename,const wchar_t *const *_ArgList);
        -: 1614:  _CRTIMP intptr_t __cdecl _wspawnvpe(int _Mode,const wchar_t *_Filename,const wchar_t *const *_ArgList,const wchar_t *const *_Env);
        -: 1615:#endif
        -: 1616:
        -: 1617:#ifndef _P_WAIT
        -: 1618:#define _P_WAIT 0
        -: 1619:#define _P_NOWAIT 1
        -: 1620:#define _OLD_P_OVERLAY 2
        -: 1621:#define _P_NOWAITO 3
        -: 1622:#define _P_DETACH 4
        -: 1623:#define _P_OVERLAY 2
        -: 1624:
        -: 1625:#define _WAIT_CHILD 0
        -: 1626:#define _WAIT_GRANDCHILD 1
        -: 1627:#endif
        -: 1628:
        -: 1629:#ifndef _SPAWNV_DEFINED
        -: 1630:#define _SPAWNV_DEFINED
        -: 1631:  _CRTIMP intptr_t __cdecl _spawnv(int _Mode,const char *_Filename,const char *const *_ArgList);
        -: 1632:  _CRTIMP intptr_t __cdecl _spawnve(int _Mode,const char *_Filename,const char *const *_ArgList,const char *const *_Env);
        -: 1633:  _CRTIMP intptr_t __cdecl _spawnvp(int _Mode,const char *_Filename,const char *const *_ArgList);
        -: 1634:  _CRTIMP intptr_t __cdecl _spawnvpe(int _Mode,const char *_Filename,const char *const *_ArgList,const char *const *_Env);
        -: 1635:#endif
        -: 1636:#endif /* _CRT_USE_WINAPI_FAMILY_DESKTOP_APP */
        -: 1637:
        -: 1638:#ifdef __cplusplus
        -: 1639:}
        -: 1640:#endif
        -: 1641:
        -: 1642:#pragma pop_macro("snprintf")
        -: 1643:#pragma pop_macro("vsnprintf")
        -: 1644:#pragma pop_macro("snwprintf")
        -: 1645:#pragma pop_macro("vsnwprintf")
        -: 1646:
        -: 1647:#pragma pack(pop)
        -: 1648:
        -: 1649:#include <sec_api/stdio_s.h>
        -: 1650:
        -: 1651:#endif
